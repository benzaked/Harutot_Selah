{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Button from\"react-native-web/dist/exports/Button\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Image from\"react-native-web/dist/exports/Image\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{createStackNavigator,createAppContainer,StackActions}from'react-navigation';import LoggedInPage from\"./comments_page\";import global from\"../components/global\";import MenuButton from\"../components/MenuButton\";import Images_data from\"../assets/Images_data\";var SitesCatalog=function(_React$Component){_inherits(SitesCatalog,_React$Component);function SitesCatalog(props){var _this;_classCallCheck(this,SitesCatalog);_this=_possibleConstructorReturn(this,_getPrototypeOf(SitesCatalog).call(this,props));_this.moveToAddNewCustomer=function(pageNo,siteImg){console.log(\"saddssaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");var pushAction=StackActions.push({routeName:'comments_page',params:{name:global.userName,photoUrl:global.photoUrl,userID:global.userId,pageNo:pageNo-1,siteImg:siteImg}});_this.props.navigation.dispatch(pushAction);};_this.state={image_clicked:false,pageNo:-1,siteImg:NaN,sites:\"\"};return _this;}_createClass(SitesCatalog,[{key:\"componentWillMount\",value:function componentWillMount(){this.setState({sites:global.sites});}},{key:\"render\",value:function render(){var _this2=this;console.log(global.sites);return React.createElement(View,{style:styles.container},this.state.image_clicked?React.createElement(LoggedInPage,{name:global.userName,photoUrl:global.photoUrl,userID:global.userId,pageNo:this.state.pageNo,siteImg:this.state.siteImg,navigation:this.props.navigation}):React.createElement(View,{style:styles.container},React.createElement(View,{style:styles.header},React.createElement(MenuButton,{navigation:this.props.navigation,showIcon:true}),React.createElement(Text,{style:styles.text},\"\\u05DC\\u05D7\\u05E5 \\u05E2\\u05DC \\u05D4\\u05EA\\u05DE\\u05D5\\u05E0\\u05D4 \\u05DB\\u05D3\\u05D9 \\u05DC\\u05E7\\u05E8\\u05D5\\u05D0 \\u05E4\\u05E8\\u05E9\\u05E0\\u05D5\\u05EA \\u05E9\\u05DC \\u05DE\\u05D1\\u05E7\\u05E8\\u05D9\\u05DD\")),React.createElement(View,{style:styles.bottom},React.createElement(ScrollView,null,global.sites.map(function(site){return React.createElement(TouchableOpacity,{onPress:function onPress(){return _this2.moveToAddNewCustomer(site.id,site.image);},style:styles.image,key:site.image},React.createElement(Image,{source:site.image,style:styles.bottomItem}));})))));}}]);return SitesCatalog;}(React.Component);export{SitesCatalog as default};var styles=StyleSheet.create({container:{flex:1,justifyContent:'center',alignContent:'center'},header:{height:'10%',backgroundColor:'#f5f5f5'},text:{fontSize:20,fontWeight:'700',paddingHorizontal:20,paddingTop:40,paddingRight:50},bottom:{height:'90%',flexDirection:'row',flexWrap:'wrap',padding:5},bottomItem:{flex:1},image:{width:300,height:250,padding:5}});","map":{"version":3,"sources":["C:/final project/react native/finalProject-master/screens/SitesCatalog.js"],"names":["React","createStackNavigator","createAppContainer","StackActions","LoggedInPage","global","MenuButton","Images_data","SitesCatalog","props","moveToAddNewCustomer","pageNo","siteImg","console","log","pushAction","push","routeName","params","name","userName","photoUrl","userID","userId","navigation","dispatch","state","image_clicked","NaN","sites","setState","styles","container","header","text","bottom","map","site","id","image","bottomItem","Component","StyleSheet","create","flex","justifyContent","alignContent","height","backgroundColor","fontSize","fontWeight","paddingHorizontal","paddingTop","paddingRight","flexDirection","flexWrap","padding","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet,\n    Text,\n    View,\n    Button,\n    TouchableOpacity,\n    Image,\n    ScrollView\n  } from 'react-native';\n  import { createStackNavigator, createAppContainer, StackActions } from 'react-navigation';\n\nimport LoggedInPage from './comments_page'\nimport global from '../components/global'\n\nimport MenuButton from  '../components/MenuButton'\nimport Images_data from '../assets/Images_data'\n\nexport default class SitesCatalog extends React.Component {\n  constructor(props){\n        \n    super(props);\n    this.state = {\n      image_clicked : false,\n      pageNo:-1,\n      siteImg: NaN,\n      sites: \"\"\n     \n    }\n  }\n  \n  componentWillMount() {\n\n  this.setState({\n    sites:global.sites\n  });\n  } \n    moveToAddNewCustomer =  (pageNo,siteImg) =>{\n      console.log(\"saddssaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\")\n      const pushAction = StackActions.push({\n        routeName: 'comments_page',\n        params: {\n          name: global.userName,\n          photoUrl: global.photoUrl,\n          userID: global.userId,\n          pageNo: pageNo -1,\n          siteImg: siteImg,\n        }\n        });\n        this.props.navigation.dispatch(pushAction);\n      \n  \n\n      //   this.props.navigation.navigate('LoggedInPage', {\n      //     name: global.userName,\n      //     photoUrl: global.photoUrl,\n      //     userID: global.userId,\n      //     pageNo: pageNo,\n      //     siteImg: siteImg,\n      //     navigation: this.props.navigation,\n      //     go_back_key: this.props.navigation.state.key\n      // })\n        // this.setState({\n        //   image_clicked: true,\n        //   pageNo: pageNo,\n        //   siteImg: siteImg\n        // }\n        // );\n\n    };\n\n\n\n  render() {\n    console.log(global.sites)\n    return (\n      \n      <View style={styles.container}>\n        {this.state.image_clicked ? (\n            <LoggedInPage name ={global.userName} photoUrl={global.photoUrl} userID={global.userId} pageNo={this.state.pageNo} siteImg ={this.state.siteImg} navigation={this.props.navigation} />\n            \n            ) : (\n              <View style={styles.container}>  \n              <View style={styles.header}>\n                <MenuButton navigation={this.props.navigation} showIcon={true} />\n                <Text style={styles.text}>\n                  לחץ על התמונה כדי לקרוא פרשנות של מבקרים\n                </Text>\n                </View>\n                \n                  <View style={styles.bottom}>\n                    <ScrollView>\n                        {global.sites.map((site) => {\n                        \n                          return (\n                            \n                          <TouchableOpacity\n                            onPress={() => this.moveToAddNewCustomer(site.id,site.image)}\n                            style={styles.image}\n                            key ={site.image}>\n                            \n                            <Image source= {site.image} style={styles.bottomItem} />\n                          </TouchableOpacity>\n                          \n                          )\n                        \n                      })}\n                    </ScrollView>\n                  </View>\n              </View>\n          )}\n          </View>\n    \n    );\n  }\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignContent: 'center',\n  },\n  header :{\n    height :'10%',\n    backgroundColor:'#f5f5f5'\n  },\n  text :{\n    fontSize:20,\n    fontWeight:'700',\n    paddingHorizontal:20,\n    paddingTop:40,\n    paddingRight:50\n  },\n  bottom :{\n    height :'90%',\n    flexDirection: 'row',\n    flexWrap:'wrap',\n    padding:5\n  },\n  bottomItem:{\n  flex:1,\n  },\n  image: {\n    width: 300,\n    height: 250,\n    padding: 5,\n    \n  },\n});\n"]},"metadata":{},"sourceType":"module"}