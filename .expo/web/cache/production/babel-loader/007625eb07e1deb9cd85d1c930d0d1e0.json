{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{CodedError,UnavailabilityError}from'@unimodules/core';import invariant from'invariant';import ExpoAppAuth from\"./ExpoAppAuth\";function isValidServiceConfiguration(config){return!!(config&&typeof config.authorizationEndpoint==='string'&&typeof config.tokenEndpoint==='string');}function assertValidClientId(clientId){if(typeof clientId!=='string'||!clientId.length){throw new CodedError('ERR_APP_AUTH_INVALID_CONFIG','`clientId` must be a string with more than 0 characters');}}function assertValidProps(_ref){var issuer=_ref.issuer,redirectUrl=_ref.redirectUrl,clientId=_ref.clientId,serviceConfiguration=_ref.serviceConfiguration;if(typeof issuer!=='string'&&!isValidServiceConfiguration(serviceConfiguration)){throw new CodedError('ERR_APP_AUTH_INVALID_CONFIG','You must provide either an `issuer` or both `authorizationEndpoint` and `tokenEndpoint`');}if(typeof redirectUrl!=='string'){throw new CodedError('ERR_APP_AUTH_INVALID_CONFIG','`redirectUrl` must be a string');}assertValidClientId(clientId);}function _executeAsync(props){return _regeneratorRuntime.async(function _executeAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!props.redirectUrl){props.redirectUrl=getDefaultOAuthRedirect();}assertValidProps(props);_context.next=4;return _regeneratorRuntime.awrap(ExpoAppAuth.executeAsync(props));case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}});}export function getDefaultOAuthRedirect(){return ExpoAppAuth.OAuthRedirect+\":/oauthredirect\";}export function authAsync(props){return _regeneratorRuntime.async(function authAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(ExpoAppAuth.executeAsync){_context2.next=2;break;}throw new UnavailabilityError('expo-app-auth','authAsync');case 2:_context2.next=4;return _regeneratorRuntime.awrap(_executeAsync(props));case 4:return _context2.abrupt(\"return\",_context2.sent);case 5:case\"end\":return _context2.stop();}}});}export function refreshAsync(props,refreshToken){return _regeneratorRuntime.async(function refreshAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(ExpoAppAuth.executeAsync){_context3.next=2;break;}throw new UnavailabilityError('expo-app-auth','refreshAsync');case 2:if(refreshToken){_context3.next=4;break;}throw new CodedError('ERR_APP_AUTH_TOKEN','Cannot refresh with null `refreshToken`');case 4:_context3.next=6;return _regeneratorRuntime.awrap(_executeAsync(_objectSpread({isRefresh:true,refreshToken:refreshToken},props)));case 6:return _context3.abrupt(\"return\",_context3.sent);case 7:case\"end\":return _context3.stop();}}});}export function revokeAsync(_ref2,_ref3){var clientId,issuer,serviceConfiguration,token,_ref3$isClientIdProvi,isClientIdProvided,revocationEndpoint,response,openidConfig,encodedClientID,encodedToken,body,headers,results;return _regeneratorRuntime.async(function revokeAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:clientId=_ref2.clientId,issuer=_ref2.issuer,serviceConfiguration=_ref2.serviceConfiguration;token=_ref3.token,_ref3$isClientIdProvi=_ref3.isClientIdProvided,isClientIdProvided=_ref3$isClientIdProvi===void 0?false:_ref3$isClientIdProvi;if(token){_context4.next=4;break;}throw new CodedError('ERR_APP_AUTH_TOKEN','Cannot revoke a null `token`');case 4:assertValidClientId(clientId);if(!(serviceConfiguration&&serviceConfiguration.revocationEndpoint)){_context4.next=9;break;}revocationEndpoint=serviceConfiguration.revocationEndpoint;_context4.next=17;break;case 9:_context4.next=11;return _regeneratorRuntime.awrap(fetch(issuer+\"/.well-known/openid-configuration\"));case 11:response=_context4.sent;_context4.next=14;return _regeneratorRuntime.awrap(response.json());case 14:openidConfig=_context4.sent;invariant(openidConfig.revocation_endpoint,'The OpenID config does not specify a revocation endpoint');revocationEndpoint=openidConfig.revocation_endpoint;case 17:encodedClientID=encodeURIComponent(clientId);encodedToken=encodeURIComponent(token);body=\"token=\"+encodedToken+(isClientIdProvided?\"&client_id=\"+encodedClientID:'');headers={'Content-Type':'application/x-www-form-urlencoded'};_context4.prev=21;_context4.next=24;return _regeneratorRuntime.awrap(fetch(revocationEndpoint,{method:'POST',headers:headers,body:body}));case 24:results=_context4.sent;return _context4.abrupt(\"return\",results);case 28:_context4.prev=28;_context4.t0=_context4[\"catch\"](21);throw new CodedError('ERR_APP_AUTH_REVOKE_FAILED',_context4.t0.message);case 31:case\"end\":return _context4.stop();}}},null,null,[[21,28]]);}function parseAuthRevocationResults(results){var data,token,retryAfterValue,retryAfter;return _regeneratorRuntime.async(function parseAuthRevocationResults$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return _regeneratorRuntime.awrap(results.json());case 2:data=_context5.sent;token=results.headers['update-client-auth'];if(!results.ok){_context5.next=8;break;}return _context5.abrupt(\"return\",{type:'success',status:results.status,data:data,token:token});case 8:if(!(results.status===503&&results.headers['retry-after'])){_context5.next=14;break;}retryAfterValue=results.headers['retry-after'];if(retryAfterValue){retryAfter=parseRetryTime(retryAfterValue);}return _context5.abrupt(\"return\",{type:'failed',status:results.status,data:data,token:token,retryAfter:retryAfter});case 14:return _context5.abrupt(\"return\",{type:'error',status:results.status,data:data,token:token});case 15:case\"end\":return _context5.stop();}}});}function parseRetryTime(value){if(/^\\d+$/.test(value)){return parseInt(value,10)*1000;}var retry=Date.parse(value);if(isNaN(retry)){throw new CodedError('ERR_APP_AUTH_FETCH_RETRY_TIME','Cannot parse the Retry-After header value returned by the server: '+value);}var now=Date.now();var parsedDate=new Date(retry);return parsedDate.getTime()-now;}var OAuthRedirect=ExpoAppAuth.OAuthRedirect,URLSchemes=ExpoAppAuth.URLSchemes;export{OAuthRedirect,URLSchemes};","map":{"version":3,"sources":["../src/AppAuth.ts"],"names":[],"mappings":"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","sourcesContent":["import { CodedError, UnavailabilityError } from '@unimodules/core';\nimport invariant from 'invariant';\n\nimport {\n  OAuthBaseProps,\n  OAuthProps,\n  OAuthRevokeOptions,\n  OAuthServiceConfiguration,\n  TokenResponse,\n} from './AppAuth.types';\nimport ExpoAppAuth from './ExpoAppAuth';\n\nexport * from './AppAuth.types';\n\nfunction isValidServiceConfiguration(config?: OAuthServiceConfiguration): boolean {\n  return !!(\n    config &&\n    typeof config.authorizationEndpoint === 'string' &&\n    typeof config.tokenEndpoint === 'string'\n  );\n}\n\nfunction assertValidClientId(clientId?: string): void {\n  if (typeof clientId !== 'string' || !clientId.length) {\n    throw new CodedError(\n      'ERR_APP_AUTH_INVALID_CONFIG',\n      '`clientId` must be a string with more than 0 characters'\n    );\n  }\n}\n\nfunction assertValidProps({\n  issuer,\n  redirectUrl,\n  clientId,\n  serviceConfiguration,\n}: OAuthProps): void {\n  if (typeof issuer !== 'string' && !isValidServiceConfiguration(serviceConfiguration)) {\n    throw new CodedError(\n      'ERR_APP_AUTH_INVALID_CONFIG',\n      'You must provide either an `issuer` or both `authorizationEndpoint` and `tokenEndpoint`'\n    );\n  }\n  if (typeof redirectUrl !== 'string') {\n    throw new CodedError('ERR_APP_AUTH_INVALID_CONFIG', '`redirectUrl` must be a string');\n  }\n  assertValidClientId(clientId);\n}\n\nasync function _executeAsync(props: OAuthProps): Promise<TokenResponse> {\n  if (!props.redirectUrl) {\n    props.redirectUrl = getDefaultOAuthRedirect();\n  }\n  assertValidProps(props);\n  return await ExpoAppAuth.executeAsync(props);\n}\n\nexport function getDefaultOAuthRedirect(): string {\n  return `${ExpoAppAuth.OAuthRedirect}:/oauthredirect`;\n}\n\nexport async function authAsync(props: OAuthProps): Promise<TokenResponse> {\n  if (!ExpoAppAuth.executeAsync) {\n    throw new UnavailabilityError('expo-app-auth', 'authAsync');\n  }\n  return await _executeAsync(props);\n}\n\nexport async function refreshAsync(\n  props: OAuthProps,\n  refreshToken: string\n): Promise<TokenResponse> {\n  if (!ExpoAppAuth.executeAsync) {\n    throw new UnavailabilityError('expo-app-auth', 'refreshAsync');\n  }\n  if (!refreshToken) {\n    throw new CodedError('ERR_APP_AUTH_TOKEN', 'Cannot refresh with null `refreshToken`');\n  }\n  return await _executeAsync({\n    isRefresh: true,\n    refreshToken,\n    ...props,\n  });\n}\n\n/* JS Method */\nexport async function revokeAsync(\n  { clientId, issuer, serviceConfiguration }: OAuthBaseProps,\n  { token, isClientIdProvided = false }: OAuthRevokeOptions\n): Promise<any> {\n  if (!token) {\n    throw new CodedError('ERR_APP_AUTH_TOKEN', 'Cannot revoke a null `token`');\n  }\n\n  assertValidClientId(clientId);\n\n  let revocationEndpoint;\n  if (serviceConfiguration && serviceConfiguration.revocationEndpoint) {\n    revocationEndpoint = serviceConfiguration.revocationEndpoint;\n  } else {\n    // For Open IDC providers only.\n    const response = await fetch(`${issuer}/.well-known/openid-configuration`);\n    const openidConfig = await response.json();\n\n    invariant(\n      openidConfig.revocation_endpoint,\n      'The OpenID config does not specify a revocation endpoint'\n    );\n\n    revocationEndpoint = openidConfig.revocation_endpoint;\n  }\n\n  const encodedClientID = encodeURIComponent(clientId);\n  const encodedToken = encodeURIComponent(token);\n  const body = `token=${encodedToken}${isClientIdProvided ? `&client_id=${encodedClientID}` : ''}`;\n  const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n  try {\n    // https://tools.ietf.org/html/rfc7009#section-2.2\n    const results = await fetch(revocationEndpoint, {\n      method: 'POST',\n      headers,\n      body,\n    });\n\n    return results;\n  } catch (error) {\n    throw new CodedError('ERR_APP_AUTH_REVOKE_FAILED', error.message);\n  }\n}\n\n// NOTE: This function is unused; delete it if we don't need it\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nasync function parseAuthRevocationResults(results: Response): Promise<any> {\n  const data = await results.json();\n  const token = results.headers['update-client-auth'];\n  // the token has been revoked successfully or the client submitted an invalid token.\n  if (results.ok) {\n    // successful op\n    return { type: 'success', status: results.status, data, token };\n  } else if (results.status === 503 && results.headers['retry-after']) {\n    // Failed op\n    const retryAfterValue = results.headers['retry-after'];\n    let retryAfter: number | undefined;\n    if (retryAfterValue) {\n      retryAfter = parseRetryTime(retryAfterValue);\n    }\n    // the client must assume the token still exists and may retry after a reasonable delay.\n    return { type: 'failed', status: results.status, data, token, retryAfter };\n  } else {\n    // Error\n    return { type: 'error', status: results.status, data, token };\n  }\n}\n\nfunction parseRetryTime(value: string): number {\n  // In accordance with RFC2616, Section 14.37. Timout may be of format seconds or future date time value\n  if (/^\\d+$/.test(value)) {\n    return parseInt(value, 10) * 1000;\n  }\n  const retry = Date.parse(value);\n  if (isNaN(retry)) {\n    throw new CodedError(\n      'ERR_APP_AUTH_FETCH_RETRY_TIME',\n      'Cannot parse the Retry-After header value returned by the server: ' + value\n    );\n  }\n  const now = Date.now();\n  const parsedDate = new Date(retry);\n  return parsedDate.getTime() - now;\n}\n\nexport const { OAuthRedirect, URLSchemes } = ExpoAppAuth;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}