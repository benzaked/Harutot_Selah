{"ast":null,"code":"function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{SwitchRouter,NavigationActions}from'react-navigation';import*as DrawerActions from\"./DrawerActions\";function withDefaultValue(obj,key,defaultValue){if(obj.hasOwnProperty(key)&&typeof obj[key]!=='undefined'){return obj;}obj[key]=defaultValue;return obj;}var getActiveRouteKey=function getActiveRouteKey(route){if(route.routes&&typeof route.index==='number'&&route.routes[route.index]){return getActiveRouteKey(route.routes[route.index]);}return route.key;};export default(function(routeConfigs){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};config=_objectSpread({},config);config=withDefaultValue(config,'resetOnBlur',config.unmountInactiveRoutes?true:!!config.resetOnBlur);config=withDefaultValue(config,'backBehavior','initialRoute');var switchRouter=SwitchRouter(routeConfigs,config);return _objectSpread({},switchRouter,{getActionCreators:function getActionCreators(route,navStateKey){return _objectSpread({openDrawer:function openDrawer(){return DrawerActions.openDrawer({key:navStateKey});},closeDrawer:function closeDrawer(){return DrawerActions.closeDrawer({key:navStateKey});},toggleDrawer:function toggleDrawer(){return DrawerActions.toggleDrawer({key:navStateKey});}},switchRouter.getActionCreators(route,navStateKey));},getStateForAction:function getStateForAction(action,state){if(!state){return _objectSpread({},switchRouter.getStateForAction(action,undefined),{isDrawerOpen:false});}var isRouterTargeted=action.key==null||action.key===state.key;if(isRouterTargeted){if(action.type===DrawerActions.CLOSE_DRAWER||action.type===NavigationActions.BACK&&state.isDrawerOpen){return _objectSpread({},state,{isDrawerOpen:false});}if(action.type===DrawerActions.OPEN_DRAWER){return _objectSpread({},state,{isDrawerOpen:true});}if(action.type===DrawerActions.TOGGLE_DRAWER){return _objectSpread({},state,{isDrawerOpen:!state.isDrawerOpen});}}var switchedState=switchRouter.getStateForAction(action,state);if(switchedState===null){return null;}if(switchedState!==state){if(getActiveRouteKey(switchedState)!==getActiveRouteKey(state)&&state.isDrawerOpen){return _objectSpread({},switchedState,{isDrawerOpen:false});}return switchedState;}return state;}});});","map":{"version":3,"sources":["DrawerRouter.tsx"],"names":["obj","getActiveRouteKey","route","config","withDefaultValue","switchRouter","SwitchRouter","getActionCreators","openDrawer","key","navStateKey","closeDrawer","toggleDrawer","getStateForAction","isDrawerOpen","isRouterTargeted","action","state","DrawerActions","NavigationActions","switchedState"],"mappings":"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","sourcesContent":["import {\n  SwitchRouter,\n  NavigationActions,\n  NavigationAction,\n  NavigationRoute,\n  NavigationRouteConfigMap,\n} from 'react-navigation';\nimport * as DrawerActions from './DrawerActions';\n\ntype State = NavigationRoute & {\n  isDrawerOpen?: any;\n};\n\nfunction withDefaultValue(obj: object, key: string, defaultValue: any): any {\n  // @ts-ignore\n  if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n    return obj;\n  }\n\n  // @ts-ignore\n  obj[key] = defaultValue;\n  return obj;\n}\n\nconst getActiveRouteKey = (route: NavigationRoute): string => {\n  if (\n    route.routes &&\n    typeof route.index === 'number' &&\n    route.routes[route.index]\n  ) {\n    return getActiveRouteKey(route.routes[route.index]);\n  }\n\n  return route.key;\n};\n\nexport default (\n  routeConfigs: NavigationRouteConfigMap<any, any>,\n  config: {\n    unmountInactiveRoutes?: boolean;\n    resetOnBlur?: boolean;\n    initialRouteName?: string;\n  } = {}\n) => {\n  config = { ...config };\n  config = withDefaultValue(\n    config,\n    'resetOnBlur',\n    config.unmountInactiveRoutes ? true : !!config.resetOnBlur\n  );\n  config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n\n  const switchRouter = SwitchRouter(routeConfigs, config);\n\n  return {\n    ...switchRouter,\n\n    getActionCreators(route: NavigationRoute, navStateKey: string) {\n      return {\n        openDrawer: () => DrawerActions.openDrawer({ key: navStateKey }),\n        closeDrawer: () => DrawerActions.closeDrawer({ key: navStateKey }),\n        toggleDrawer: () => DrawerActions.toggleDrawer({ key: navStateKey }),\n        ...switchRouter.getActionCreators(route, navStateKey),\n      };\n    },\n\n    getStateForAction(action: NavigationAction, state?: State) {\n      // Set up the initial state if needed\n      if (!state) {\n        return {\n          ...switchRouter.getStateForAction(action, undefined),\n          isDrawerOpen: false,\n        };\n      }\n\n      const isRouterTargeted = action.key == null || action.key === state.key;\n\n      if (isRouterTargeted) {\n        // Only handle actions that are meant for this drawer, as specified by action.key.\n        if (\n          action.type === DrawerActions.CLOSE_DRAWER ||\n          (action.type === NavigationActions.BACK && state.isDrawerOpen)\n        ) {\n          return {\n            ...state,\n            isDrawerOpen: false,\n          };\n        }\n\n        if (action.type === DrawerActions.OPEN_DRAWER) {\n          return {\n            ...state,\n            isDrawerOpen: true,\n          };\n        }\n\n        if (action.type === DrawerActions.TOGGLE_DRAWER) {\n          return {\n            ...state,\n            isDrawerOpen: !state.isDrawerOpen,\n          };\n        }\n      }\n\n      // Fall back on switch router for screen switching logic, and handling of child routers\n      const switchedState = switchRouter.getStateForAction(action, state);\n\n      if (switchedState === null) {\n        // The switch router or a child router is attempting to swallow this action. We return null to allow this.\n        return null;\n      }\n\n      // Has the switch router changed the state?\n      if (switchedState !== state) {\n        // If any navigation has happened, and the drawer is maybe open, make sure to close it\n        if (\n          getActiveRouteKey(switchedState) !== getActiveRouteKey(state) &&\n          state.isDrawerOpen\n        ) {\n          return {\n            ...switchedState,\n            isDrawerOpen: false,\n          };\n        }\n\n        // At this point, return the state as defined by the switch router.\n        // The active route key hasn't changed, so this most likely means that a child router has returned\n        // a new state like a param change, but the same key is still active and the drawer will remain open\n        return switchedState;\n      }\n\n      return state;\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}