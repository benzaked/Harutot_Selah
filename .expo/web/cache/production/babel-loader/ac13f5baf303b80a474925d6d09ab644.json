{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from'react';import PropTypes from'prop-types';import ReactNative from\"react-native-web/dist/index\";import DeviceEventEmitter from\"react-native-web/dist/exports/DeviceEventEmitter\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";var ScrollViewManager=NativeModules.ScrollViewManager;var KeyboardAwareBase=function(_Component){_inherits(KeyboardAwareBase,_Component);function KeyboardAwareBase(props){var _this;_classCallCheck(this,KeyboardAwareBase);_this=_possibleConstructorReturn(this,_getPrototypeOf(KeyboardAwareBase).call(this,props));_this._bind('_onKeyboardWillShow','_onKeyboardWillHide','_addKeyboardEventListeners','_removeKeyboardListeners','_scrollToFocusedTextInput','_onKeyboardAwareViewLayout','scrollToBottom','scrollBottomOnNextSizeChange');_this.state={keyboardHeight:0};_this._addKeyboardEventListeners();return _this;}_createClass(KeyboardAwareBase,[{key:\"_bind\",value:function _bind(){var _this2=this;for(var _len=arguments.length,methods=new Array(_len),_key=0;_key<_len;_key++){methods[_key]=arguments[_key];}methods.forEach(function(method){_this2[method]=_this2[method].bind(_this2);});}},{key:\"_addKeyboardEventListeners\",value:function _addKeyboardEventListeners(){var KeyboardEventsObj=Keyboard||DeviceEventEmitter;this.keyboardEventListeners=[KeyboardEventsObj.addListener('keyboardWillShow',this._onKeyboardWillShow),KeyboardEventsObj.addListener('keyboardWillHide',this._onKeyboardWillHide)];}},{key:\"_removeKeyboardListeners\",value:function _removeKeyboardListeners(){this.keyboardEventListeners.forEach(function(eventListener){return eventListener.remove();});}},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;if(this._keyboardAwareView&&this.props.startScrolledToBottom){this.scrollToBottom(false);setTimeout(function(){return _this3._keyboardAwareView.setNativeProps({opacity:1});},100);}}},{key:\"_onKeyboardAwareViewLayout\",value:function _onKeyboardAwareViewLayout(layout){this._keyboardAwareView.layout=layout;this._keyboardAwareView.contentOffset={x:0,y:0};this._updateKeyboardAwareViewContentSize();}},{key:\"_onKeyboardAwareViewScroll\",value:function _onKeyboardAwareViewScroll(contentOffset){this._keyboardAwareView.contentOffset=contentOffset;this._updateKeyboardAwareViewContentSize();}},{key:\"_updateKeyboardAwareViewContentSize\",value:function _updateKeyboardAwareViewContentSize(){var _this4=this;if(ScrollViewManager&&ScrollViewManager.getContentSize){ScrollViewManager.getContentSize(ReactNative.findNodeHandle(this._keyboardAwareView),function(res){if(_this4._keyboardAwareView){_this4._keyboardAwareView.contentSize=res;if(_this4.state.scrollBottomOnNextSizeChange){_this4.scrollToBottom();_this4.state.scrollBottomOnNextSizeChange=false;}}});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._removeKeyboardListeners();}},{key:\"_scrollToFocusedTextInput\",value:function _scrollToFocusedTextInput(){var _this5=this;if(this.props.getTextInputRefs){var textInputRefs=this.props.getTextInputRefs();textInputRefs.some(function(textInputRef,index,array){var isFocusedFunc=textInputRef.isFocused();var isFocused=isFocusedFunc&&typeof isFocusedFunc===\"function\"?isFocusedFunc():isFocusedFunc;if(isFocused){setTimeout(function(){_this5._keyboardAwareView.getScrollResponder().scrollResponderScrollNativeHandleToKeyboard(ReactNative.findNodeHandle(textInputRef),_this5.props.scrollToInputAdditionalOffset,true);},0);}return isFocused;});}}},{key:\"_onKeyboardWillShow\",value:function _onKeyboardWillShow(event){this._scrollToFocusedTextInput();var newKeyboardHeight=event.endCoordinates.height;if(this.state.keyboardHeight===newKeyboardHeight){return;}this.setState({keyboardHeight:newKeyboardHeight});if(this.props.scrollToBottomOnKBShow){this.scrollToBottom();}}},{key:\"_onKeyboardWillHide\",value:function _onKeyboardWillHide(event){var keyboardHeight=this.state.keyboardHeight;this.setState({keyboardHeight:0});var hasYOffset=this._keyboardAwareView&&this._keyboardAwareView.contentOffset&&this._keyboardAwareView.contentOffset.y!==undefined;var yOffset=hasYOffset?Math.max(this._keyboardAwareView.contentOffset.y-keyboardHeight,0):0;this._keyboardAwareView.scrollTo({x:0,y:yOffset,animated:true});}},{key:\"scrollBottomOnNextSizeChange\",value:function scrollBottomOnNextSizeChange(){this.state.scrollBottomOnNextSizeChange=true;}},{key:\"scrollToBottom\",value:function scrollToBottom(){var _this6=this;var scrollAnimated=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;if(this._keyboardAwareView){if(!this._keyboardAwareView.contentSize){setTimeout(function(){return _this6.scrollToBottom(scrollAnimated);},50);return;}var bottomYOffset=this._keyboardAwareView.contentSize.height-this._keyboardAwareView.layout.height+this._keyboardAwareView.props.contentInset.bottom;this._keyboardAwareView.scrollTo({x:0,y:bottomYOffset,animated:scrollAnimated});}}},{key:\"scrollTo\",value:function scrollTo(options){if(this._keyboardAwareView)this._keyboardAwareView.scrollTo(options);}}]);return KeyboardAwareBase;}(Component);export{KeyboardAwareBase as default};KeyboardAwareBase.propTypes={startScrolledToBottom:PropTypes.bool,scrollToBottomOnKBShow:PropTypes.bool,scrollToInputAdditionalOffset:PropTypes.number};KeyboardAwareBase.defaultProps={startScrolledToBottom:false,scrollToBottomOnKBShow:false,scrollToInputAdditionalOffset:75};","map":{"version":3,"sources":["C:/final project/react native/finalProject-master/node_modules/react-native-keyboard-aware-scrollview/src/KeyboardAwareBase.js"],"names":["React","Component","PropTypes","ReactNative","ScrollViewManager","NativeModules","KeyboardAwareBase","props","_bind","state","keyboardHeight","_addKeyboardEventListeners","methods","forEach","method","bind","KeyboardEventsObj","Keyboard","DeviceEventEmitter","keyboardEventListeners","addListener","_onKeyboardWillShow","_onKeyboardWillHide","eventListener","remove","_keyboardAwareView","startScrolledToBottom","scrollToBottom","setTimeout","setNativeProps","opacity","layout","contentOffset","x","y","_updateKeyboardAwareViewContentSize","getContentSize","findNodeHandle","res","contentSize","scrollBottomOnNextSizeChange","_removeKeyboardListeners","getTextInputRefs","textInputRefs","some","textInputRef","index","array","isFocusedFunc","isFocused","getScrollResponder","scrollResponderScrollNativeHandleToKeyboard","scrollToInputAdditionalOffset","event","_scrollToFocusedTextInput","newKeyboardHeight","endCoordinates","height","setState","scrollToBottomOnKBShow","hasYOffset","undefined","yOffset","Math","max","scrollTo","animated","scrollAnimated","bottomYOffset","contentInset","bottom","options","propTypes","bool","number","defaultProps"],"mappings":"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","sourcesContent":["\nimport React , { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport ReactNative, {\n  DeviceEventEmitter,\n  Keyboard,\n  NativeModules,\n} from 'react-native';\n\nconst ScrollViewManager = NativeModules.ScrollViewManager;\n\nexport default class KeyboardAwareBase extends Component {\n  constructor(props) {\n    super(props);\n    this._bind('_onKeyboardWillShow', '_onKeyboardWillHide', '_addKeyboardEventListeners', '_removeKeyboardListeners', '_scrollToFocusedTextInput', '_onKeyboardAwareViewLayout', 'scrollToBottom', 'scrollBottomOnNextSizeChange');\n    this.state = {keyboardHeight: 0};\n    this._addKeyboardEventListeners();\n  }\n  \n  _bind(...methods) {\n    methods.forEach((method) => {\n      this[method] = this[method].bind(this);\n    });\n  }\n  \n  _addKeyboardEventListeners() {\n    const KeyboardEventsObj = Keyboard || DeviceEventEmitter;\n    this.keyboardEventListeners = [\n      KeyboardEventsObj.addListener('keyboardWillShow', this._onKeyboardWillShow),\n      KeyboardEventsObj.addListener('keyboardWillHide', this._onKeyboardWillHide)\n    ];\n  }\n  \n  _removeKeyboardListeners() {\n    this.keyboardEventListeners.forEach((eventListener) => eventListener.remove());\n  }\n\n  componentDidMount() {\n    if(this._keyboardAwareView && this.props.startScrolledToBottom) {\n      this.scrollToBottom(false);\n      setTimeout(() => this._keyboardAwareView.setNativeProps({ opacity: 1 }), 100);\n    }\n  }\n\n  _onKeyboardAwareViewLayout(layout) {\n    this._keyboardAwareView.layout = layout;\n    this._keyboardAwareView.contentOffset = {x: 0, y: 0};\n    this._updateKeyboardAwareViewContentSize();\n  }\n\n  _onKeyboardAwareViewScroll(contentOffset) {\n    this._keyboardAwareView.contentOffset = contentOffset;\n    this._updateKeyboardAwareViewContentSize();\n  }\n\n  _updateKeyboardAwareViewContentSize() {\n    if(ScrollViewManager && ScrollViewManager.getContentSize) {\n      ScrollViewManager.getContentSize(ReactNative.findNodeHandle(this._keyboardAwareView), (res)=> {\n        if(this._keyboardAwareView) {\n          this._keyboardAwareView.contentSize = res;\n          if(this.state.scrollBottomOnNextSizeChange) {\n            this.scrollToBottom();\n            this.state.scrollBottomOnNextSizeChange = false;\n          }\n        }\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this._removeKeyboardListeners();\n  }\n  \n  _scrollToFocusedTextInput() {\n    if (this.props.getTextInputRefs) {\n      const textInputRefs = this.props.getTextInputRefs();\n      textInputRefs.some((textInputRef, index, array) => {\n        const isFocusedFunc = textInputRef.isFocused();\n        const isFocused = isFocusedFunc && (typeof isFocusedFunc === \"function\") ? isFocusedFunc() : isFocusedFunc;\n        if (isFocused) {\n          setTimeout(() => {\n            this._keyboardAwareView.getScrollResponder().scrollResponderScrollNativeHandleToKeyboard(\n              ReactNative.findNodeHandle(textInputRef), this.props.scrollToInputAdditionalOffset, true);\n          }, 0);\n        }\n        return isFocused;\n      });\n    }\n  }\n  \n  _onKeyboardWillShow(event) {\n    this._scrollToFocusedTextInput();\n    \n    const newKeyboardHeight = event.endCoordinates.height;\n    if (this.state.keyboardHeight === newKeyboardHeight) {\n      return;\n    }\n    \n    this.setState({keyboardHeight: newKeyboardHeight});\n\n    if(this.props.scrollToBottomOnKBShow) {\n      this.scrollToBottom();\n    }\n  }\n\n  _onKeyboardWillHide(event) {\n    const keyboardHeight = this.state.keyboardHeight;\n    this.setState({keyboardHeight: 0});\n\n    const hasYOffset = this._keyboardAwareView && this._keyboardAwareView.contentOffset && this._keyboardAwareView.contentOffset.y !== undefined;\n    const yOffset = hasYOffset ? Math.max(this._keyboardAwareView.contentOffset.y - keyboardHeight, 0) : 0;\n    this._keyboardAwareView.scrollTo({x: 0, y: yOffset, animated: true});\n  }\n\n  scrollBottomOnNextSizeChange() {\n    this.state.scrollBottomOnNextSizeChange = true;\n  }\n\n  scrollToBottom(scrollAnimated = true) {\n    if (this._keyboardAwareView) {\n\n      if(!this._keyboardAwareView.contentSize) {\n        setTimeout(() => this.scrollToBottom(scrollAnimated), 50);\n        return;\n      }\n\n      const bottomYOffset = this._keyboardAwareView.contentSize.height - this._keyboardAwareView.layout.height + this._keyboardAwareView.props.contentInset.bottom;\n      this._keyboardAwareView.scrollTo({x: 0, y: bottomYOffset, animated: scrollAnimated});\n    }\n  }\n  scrollTo(options) {\n    if (this._keyboardAwareView) this._keyboardAwareView.scrollTo(options);\n  }\n}\n\nKeyboardAwareBase.propTypes = {\n  startScrolledToBottom: PropTypes.bool,\n  scrollToBottomOnKBShow: PropTypes.bool,\n  scrollToInputAdditionalOffset: PropTypes.number\n};\nKeyboardAwareBase.defaultProps = {\n  startScrolledToBottom: false,\n  scrollToBottomOnKBShow: false,\n  scrollToInputAdditionalOffset: 75\n};\n"]},"metadata":{},"sourceType":"module"}