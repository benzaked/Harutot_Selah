{"ast":null,"code":"import{cond,lessThan,multiply,round,add,sub}from\"../base\";import Platform from\"react-native-web/dist/exports/Platform\";import AnimatedNode from\"../core/AnimatedNode\";export default function color(r,g,b){var a=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;if(a instanceof AnimatedNode){a=round(multiply(a,255));}else{a=Math.round(a*255);}var color=add(multiply(a,1<<24),multiply(r,1<<16),multiply(g,1<<8),b);if(Platform.OS==='android'){return cond(lessThan(color,1<<31>>>0),color,sub(color,Math.pow(2,32)));}return color;}","map":{"version":3,"sources":["C:/final project/react native/finalProject-master/node_modules/react-native-reanimated/src/derived/color.js"],"names":["cond","lessThan","multiply","round","add","sub","AnimatedNode","color","r","g","b","a","Math","Platform","OS","pow"],"mappings":"AAAA,OAASA,IAAT,CAAeC,QAAf,CAAyBC,QAAzB,CAAmCC,KAAnC,CAA0CC,GAA1C,CAA+CC,GAA/C,e,6DAEA,MAAOC,CAAAA,YAAP,4BAEA,cAAe,SAASC,CAAAA,KAAT,CAAeC,CAAf,CAAkBC,CAAlB,CAAqBC,CAArB,CAA+B,IAAPC,CAAAA,CAAO,2DAAH,CAAG,CAC5C,GAAIA,CAAC,WAAYL,CAAAA,YAAjB,CAA+B,CAC7BK,CAAC,CAAGR,KAAK,CAACD,QAAQ,CAACS,CAAD,CAAI,GAAJ,CAAT,CAAT,CACD,CAFD,IAEO,CACLA,CAAC,CAAGC,IAAI,CAACT,KAAL,CAAWQ,CAAC,CAAG,GAAf,CAAJ,CACD,CACD,GAAMJ,CAAAA,KAAK,CAAGH,GAAG,CACfF,QAAQ,CAACS,CAAD,CAAI,GAAK,EAAT,CADO,CAEfT,QAAQ,CAACM,CAAD,CAAI,GAAK,EAAT,CAFO,CAGfN,QAAQ,CAACO,CAAD,CAAI,GAAK,CAAT,CAHO,CAIfC,CAJe,CAAjB,CAMA,GAAIG,QAAQ,CAACC,EAAT,GAAgB,SAApB,CAA+B,CAE7B,MAAOd,CAAAA,IAAI,CACTC,QAAQ,CAACM,KAAD,CAAS,GAAK,EAAN,GAAc,CAAtB,CADC,CAETA,KAFS,CAGTF,GAAG,CAACE,KAAD,CAAQK,IAAI,CAACG,GAAL,CAAS,CAAT,CAAY,EAAZ,CAAR,CAHM,CAAX,CAKD,CACD,MAAOR,CAAAA,KAAP,CACD","sourcesContent":["import { cond, lessThan, multiply, round, add, sub } from '../base';\nimport { Platform } from 'react-native';\nimport AnimatedNode from '../core/AnimatedNode';\n\nexport default function color(r, g, b, a = 1) {\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n  const color = add(\n    multiply(a, 1 << 24),\n    multiply(r, 1 << 16),\n    multiply(g, 1 << 8),\n    b\n  );\n  if (Platform.OS === 'android') {\n    // on Android color is represented as signed 32 bit int\n    return cond(\n      lessThan(color, (1 << 31) >>> 0),\n      color,\n      sub(color, Math.pow(2, 32))\n    );\n  }\n  return color;\n}\n"]},"metadata":{},"sourceType":"module"}