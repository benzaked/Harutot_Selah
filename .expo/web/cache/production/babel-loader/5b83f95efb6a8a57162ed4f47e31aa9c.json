{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React,{Component}from'react';import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import PropTypes from'prop-types';import{KeyboardAwareScrollView}from'react-native-keyboard-aware-scrollview';var Input=function(_Component){_inherits(Input,_Component);function Input(){var _getPrototypeOf2;var _this;_classCallCheck(this,Input);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Input)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={text:undefined};_this.onChangeText=function(text){return _this.setState({text:text});};_this.onSubmitEditing=function(_ref){var text=_ref.nativeEvent.text;return _this.setState({text:text},_this.submit);};_this.submit=function(){var text=_this.state.text;if(text){_this.setState({text:undefined},function(){return _this.props.onSubmit(text);});}else{alert('Please enter your comment first');}};return _this;}_createClass(Input,[{key:\"render\",value:function render(){return React.createElement(KeyboardAwareScrollView,{style:{fles:1},behavior:\"padding\",enabled:true},React.createElement(ScrollView,null,React.createElement(View,{style:styles.container},React.createElement(TextInput,{placeholder:\"\\u05EA\\u05DF \\u05E4\\u05D9\\u05E8\\u05D5\\u05E9 \\u05DC\\u05D7\\u05E8\\u05D9\\u05D8\\u05D4\",keyboardType:\"twitter\",autoFocus:true,style:styles.input,value:this.state.text,onChangeText:this.onChangeText,onSubmitEditing:this.onSubmitEditing}),React.createElement(TouchableOpacity,{style:styles.button,onPress:this.submit},React.createElement(Text,{style:[styles.text,!this.state.text?styles.inactive:[]]},\"Post\")))));}}]);return Input;}(Component);Input.propTypes={onSubmit:PropTypes.func.isRequired};export{Input as default};var styles=StyleSheet.create({container:{backgroundColor:'#FFF',flexDirection:'row',borderTopWidth:1,borderColor:'#EEE',alignItems:'center',paddingLeft:15},input:{flex:1,height:40,fontSize:15},button:{height:40,paddingHorizontal:20,alignItems:'center',justifyContent:'center'},inactive:{color:'#CCC'},text:{color:'#3F51B5',fontWeight:'bold',fontStyle:\"italic\",textAlign:'center',fontSize:15}});","map":{"version":3,"sources":["C:/final project/react native/finalProject-master/actions/Input.js"],"names":["React","Component","PropTypes","KeyboardAwareScrollView","Input","state","text","undefined","onChangeText","setState","onSubmitEditing","nativeEvent","submit","props","onSubmit","alert","fles","styles","container","input","button","inactive","propTypes","func","isRequired","StyleSheet","create","backgroundColor","flexDirection","borderTopWidth","borderColor","alignItems","paddingLeft","flex","height","fontSize","paddingHorizontal","justifyContent","color","fontWeight","fontStyle","textAlign"],"mappings":"mVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,6cAQA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAAQC,uBAAR,KAAsC,wCAAtC,C,GAEqBC,CAAAA,K,8WAMnBC,K,CAAQ,CACNC,IAAI,CAAEC,SADA,C,OAKRC,Y,CAAe,SAACF,IAAD,QAAU,OAAKG,QAAL,CAAc,CAAEH,IAAI,CAAJA,IAAF,CAAd,CAAV,E,OAMfI,e,CAAkB,kBAAkBJ,CAAAA,IAAlB,MAAGK,WAAH,CAAkBL,IAAlB,OAA+B,OAAKG,QAAL,CAAc,CAAEH,IAAI,CAAJA,IAAF,CAAd,CAAwB,MAAKM,MAA7B,CAA/B,E,OAGlBA,M,CAAS,UAAM,IACLN,CAAAA,IADK,CACI,MAAKD,KADT,CACLC,IADK,CAEb,GAAIA,IAAJ,CAAU,CACR,MAAKG,QAAL,CAAc,CAAEH,IAAI,CAAEC,SAAR,CAAd,CAAmC,iBAAM,OAAKM,KAAL,CAAWC,QAAX,CAAoBR,IAApB,CAAN,EAAnC,EACD,CAFD,IAEO,CACLS,KAAK,CAAC,iCAAD,CAAL,CACD,CACF,C,wEAEQ,CACP,MAGE,qBAAC,uBAAD,EACE,KAAK,CAAE,CAACC,IAAI,CAAE,CAAP,CADT,CAEE,QAAQ,CAAC,SAFX,CAGE,OAAO,CAAE,IAHX,EAII,oBAAC,UAAD,MACE,oBAAC,IAAD,EAAO,KAAK,CAAEC,MAAM,CAACC,SAArB,EAEE,oBAAC,SAAD,EACE,WAAW,CAAC,kFADd,CAEE,YAAY,CAAC,SAFf,CAGE,SAAS,CAAE,IAHb,CAIE,KAAK,CAAED,MAAM,CAACE,KAJhB,CAKE,KAAK,CAAE,KAAKd,KAAL,CAAWC,IALpB,CAME,YAAY,CAAE,KAAKE,YANrB,CAOE,eAAe,CAAE,KAAKE,eAPxB,EAFF,CAYE,oBAAC,gBAAD,EACE,KAAK,CAAEO,MAAM,CAACG,MADhB,CAEE,OAAO,CAAE,KAAKR,MAFhB,EAKE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAACK,MAAM,CAACX,IAAR,CAAc,CAAC,KAAKD,KAAL,CAAWC,IAAZ,CAAmBW,MAAM,CAACI,QAA1B,CAAqC,EAAnD,CAAb,SALF,CAZF,CADF,CAJJ,CAHF,CAkCD,C,mBAhEgCpB,S,EAAdG,K,CAEZkB,S,CAAY,CACjBR,QAAQ,CAAEZ,SAAS,CAACqB,IAAV,CAAeC,UADR,C,QAFApB,K,aAoErB,GAAMa,CAAAA,MAAM,CAAGQ,UAAU,CAACC,MAAX,CAAkB,CAC/BR,SAAS,CAAE,CACTS,eAAe,CAAE,MADR,CAETC,aAAa,CAAE,KAFN,CAGTC,cAAc,CAAE,CAHP,CAITC,WAAW,CAAE,MAJJ,CAKTC,UAAU,CAAE,QALH,CAMTC,WAAW,CAAE,EANJ,CADoB,CAS/Bb,KAAK,CAAE,CACLc,IAAI,CAAE,CADD,CAELC,MAAM,CAAE,EAFH,CAGLC,QAAQ,CAAE,EAHL,CATwB,CAc/Bf,MAAM,CAAE,CACNc,MAAM,CAAE,EADF,CAENE,iBAAiB,CAAE,EAFb,CAGNL,UAAU,CAAE,QAHN,CAINM,cAAc,CAAE,QAJV,CAduB,CAoB/BhB,QAAQ,CAAE,CACRiB,KAAK,CAAE,MADC,CApBqB,CAuB/BhC,IAAI,CAAE,CACJgC,KAAK,CAAE,SADH,CAEJC,UAAU,CAAE,MAFR,CAGJC,SAAS,CAAE,QAHP,CAIJC,SAAS,CAAE,QAJP,CAKJN,QAAQ,CAAE,EALN,CAvByB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n  KeyboardAvoidingView,\n  StyleSheet,\n  TextInput,\n  Text,\n  View, TouchableOpacity,ScrollView\n} from 'react-native';\nimport PropTypes from 'prop-types'\nimport {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scrollview'\n\nexport default class Input extends Component {\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    text: undefined, // user's input\n  };\n\n  // Update state when input changes\n  onChangeText = (text) => this.setState({ text });\n\n  // Handle return press on the keyboard\n  // NOTE: You don't really need it for this example, because\n  // we're using a keyboard without return button, but I left it here\n  // in case you'd want to switch to a different keyboard\n  onSubmitEditing = ({ nativeEvent: { text } }) => this.setState({ text }, this.submit);\n\n  // Call this.props.onSubmit handler and pass the comment\n  submit = () => {\n    const { text } = this.state;\n    if (text) {\n      this.setState({ text: undefined }, () => this.props.onSubmit(text));\n    } else {\n      alert('Please enter your comment first');\n    }\n  };\n\n  render() {\n    return (\n      // This moves children view with input field and submit button\n      // up above the keyboard when it's active\n      <KeyboardAwareScrollView\n        style={{fles: 1}}\n        behavior='padding'\n        enabled={true}>\n          <ScrollView>\n            <View  style={styles.container}>\n              {/* Comment input field */}\n              <TextInput\n                placeholder=\"תן פירוש לחריטה\"\n                keyboardType=\"twitter\" // keyboard with no return button\n                autoFocus={true} // focus and show the keyboard\n                style={styles.input}\n                value={this.state.text}\n                onChangeText={this.onChangeText} // handle input changes\n                onSubmitEditing={this.onSubmitEditing} // handle submit event\n              />\n              {/* Post button */}\n              <TouchableOpacity\n                style={styles.button}\n                onPress={this.submit}\n              >\n                {/* Apply inactive style if no input */}\n                <Text style={[styles.text, !this.state.text ? styles.inactive : []]}>Post</Text>\n              </TouchableOpacity>\n            </View>\n          </ScrollView>\n          \n        </KeyboardAwareScrollView>\n      \n      \n    );\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#FFF',\n    flexDirection: 'row',\n    borderTopWidth: 1,\n    borderColor: '#EEE',\n    alignItems: 'center',\n    paddingLeft: 15,\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    fontSize: 15,\n  },\n  button: {\n    height: 40,\n    paddingHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inactive: {\n    color: '#CCC',\n  },\n  text: {\n    color: '#3F51B5',\n    fontWeight: 'bold',\n    fontStyle: \"italic\",\n    textAlign: 'center',\n    fontSize: 15,\n  },\n});"]},"metadata":{},"sourceType":"module"}