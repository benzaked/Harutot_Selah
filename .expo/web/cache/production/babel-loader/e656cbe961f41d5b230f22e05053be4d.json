{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import PropTypes from'prop-types';import React from'react';import EdgeInsetsPropType from\"react-native-web/dist/exports/EdgeInsetsPropType\";import PointPropType from\"react-native-web/dist/exports/PointPropType\";import Platform from\"react-native-web/dist/exports/Platform\";import RNAnimated from\"react-native-web/dist/exports/Animated\";import{requireNativeComponent}from\"react-native-web/dist/index\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";import ColorPropType from\"react-native-web/dist/exports/ColorPropType\";import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import ViewPropTypes from\"react-native-web/dist/exports/ViewPropTypes\";import View from\"react-native-web/dist/exports/View\";import MapMarker from\"./MapMarker\";import MapPolyline from\"./MapPolyline\";import MapPolygon from\"./MapPolygon\";import MapCircle from\"./MapCircle\";import MapCallout from\"./MapCallout\";import MapCalloutSubview from\"./MapCalloutSubview\";import MapOverlay from\"./MapOverlay\";import MapUrlTile from\"./MapUrlTile\";import MapWMSTile from\"./MapWMSTile\";import MapLocalTile from\"./MapLocalTile\";import AnimatedRegion from\"./AnimatedRegion\";import{contextTypes as childContextTypes,getAirMapName,googleMapIsInstalled,createNotSupportedComponent}from\"./decorateMapComponent\";import*as ProviderConstants from\"./ProviderConstants\";export var MAP_TYPES={STANDARD:'standard',SATELLITE:'satellite',HYBRID:'hybrid',TERRAIN:'terrain',NONE:'none',MUTEDSTANDARD:'mutedStandard'};var GOOGLE_MAPS_ONLY_TYPES=[MAP_TYPES.TERRAIN,MAP_TYPES.NONE];var viewConfig={uiViewClassName:'AIR<provider>Map',validAttributes:{region:true}};var CameraShape=PropTypes.shape({center:PropTypes.shape({latitude:PropTypes.number.isRequired,longitude:PropTypes.number.isRequired}),pitch:PropTypes.number.isRequired,heading:PropTypes.number.isRequired,altitude:PropTypes.number.isRequired,zoom:PropTypes.number.isRequired});var viewPropTypes=ViewPropTypes||View.propTypes;var propTypes=_objectSpread({},viewPropTypes,{provider:PropTypes.oneOf(['google']),style:viewPropTypes.style,customMapStyle:PropTypes.array,customMapStyleString:PropTypes.string,showsUserLocation:PropTypes.bool,userLocationAnnotationTitle:PropTypes.string,showsMyLocationButton:PropTypes.bool,followsUserLocation:PropTypes.bool,showsPointsOfInterest:PropTypes.bool,showsCompass:PropTypes.bool,zoomEnabled:PropTypes.bool,zoomTapEnabled:PropTypes.bool,zoomControlEnabled:PropTypes.bool,rotateEnabled:PropTypes.bool,cacheEnabled:PropTypes.bool,loadingEnabled:PropTypes.bool,loadingBackgroundColor:ColorPropType,loadingIndicatorColor:ColorPropType,scrollEnabled:PropTypes.bool,pitchEnabled:PropTypes.bool,toolbarEnabled:PropTypes.bool,moveOnMarkerPress:PropTypes.bool,showsScale:PropTypes.bool,showsBuildings:PropTypes.bool,showsTraffic:PropTypes.bool,showsIndoors:PropTypes.bool,showsIndoorLevelPicker:PropTypes.bool,mapType:PropTypes.oneOf(Object.values(MAP_TYPES)),region:PropTypes.shape({latitude:PropTypes.number.isRequired,longitude:PropTypes.number.isRequired,latitudeDelta:PropTypes.number.isRequired,longitudeDelta:PropTypes.number.isRequired}),initialRegion:PropTypes.shape({latitude:PropTypes.number.isRequired,longitude:PropTypes.number.isRequired,latitudeDelta:PropTypes.number.isRequired,longitudeDelta:PropTypes.number.isRequired}),camera:CameraShape,initialCamera:CameraShape,liteMode:PropTypes.bool,mapPadding:EdgeInsetsPropType,paddingAdjustmentBehavior:PropTypes.oneOf(['always','automatic','never']),maxDelta:PropTypes.number,minDelta:PropTypes.number,legalLabelInsets:EdgeInsetsPropType,onMapReady:PropTypes.func,onKmlReady:PropTypes.func,onRegionChange:PropTypes.func,onRegionChangeComplete:PropTypes.func,onPress:PropTypes.func,onLongPress:PropTypes.func,onUserLocationChange:PropTypes.func,onPanDrag:PropTypes.func,onPoiClick:PropTypes.func,onMarkerPress:PropTypes.func,onMarkerSelect:PropTypes.func,onMarkerDeselect:PropTypes.func,onCalloutPress:PropTypes.func,onMarkerDragStart:PropTypes.func,onMarkerDrag:PropTypes.func,onMarkerDragEnd:PropTypes.func,minZoomLevel:PropTypes.number,maxZoomLevel:PropTypes.number,kmlSrc:PropTypes.string,compassOffset:PointPropType,onIndoorLevelActivated:PropTypes.func,onIndoorBuildingFocused:PropTypes.func});var MapView=function(_React$Component){_inherits(MapView,_React$Component);function MapView(props){var _this;_classCallCheck(this,MapView);_this=_possibleConstructorReturn(this,_getPrototypeOf(MapView).call(this,props));_this.state={isReady:Platform.OS==='ios'};_this._onMapReady=_this._onMapReady.bind(_assertThisInitialized(_this));_this._onMarkerPress=_this._onMarkerPress.bind(_assertThisInitialized(_this));_this._onChange=_this._onChange.bind(_assertThisInitialized(_this));_this._onLayout=_this._onLayout.bind(_assertThisInitialized(_this));return _this;}_createClass(MapView,[{key:\"getChildContext\",value:function getChildContext(){return{provider:this.props.provider};}},{key:\"getSnapshotBeforeUpdate\",value:function getSnapshotBeforeUpdate(prevProps){if(this.state.isReady&&this.props.customMapStyle!==prevProps.customMapStyle){this._updateStyle(this.props);}return this.props.region||null;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,region){var a=this.__lastRegion;var b=region;if(!a||!b){return;}if(a.latitude!==b.latitude||a.longitude!==b.longitude||a.latitudeDelta!==b.latitudeDelta||a.longitudeDelta!==b.longitudeDelta){this.map.setNativeProps({region:b});}}},{key:\"componentDidMount\",value:function componentDidMount(){var isReady=this.state.isReady;if(isReady){this._updateStyle(this.props);}}},{key:\"_updateStyle\",value:function _updateStyle(props){var customMapStyle=props.customMapStyle;this.map.setNativeProps({customMapStyleString:JSON.stringify(customMapStyle)});}},{key:\"_onMapReady\",value:function _onMapReady(){var _this$props=this.props,region=_this$props.region,initialRegion=_this$props.initialRegion,onMapReady=_this$props.onMapReady;if(region){this.map.setNativeProps({region:region});}else if(initialRegion){this.map.setNativeProps({initialRegion:initialRegion});}this._updateStyle(this.props);this.setState({isReady:true},function(){if(onMapReady){onMapReady();}});}},{key:\"_onLayout\",value:function _onLayout(e){var layout=e.nativeEvent.layout;if(!layout.width||!layout.height){return;}if(this.state.isReady&&!this.__layoutCalled){var _this$props2=this.props,region=_this$props2.region,initialRegion=_this$props2.initialRegion;if(region){this.__layoutCalled=true;this.map.setNativeProps({region:region});}else if(initialRegion){this.__layoutCalled=true;this.map.setNativeProps({initialRegion:initialRegion});}}if(this.props.onLayout){this.props.onLayout(e);}}},{key:\"_onMarkerPress\",value:function _onMarkerPress(event){if(this.props.onMarkerPress){this.props.onMarkerPress(event.nativeEvent);}}},{key:\"_onChange\",value:function _onChange(event){this.__lastRegion=event.nativeEvent.region;if(event.nativeEvent.continuous){if(this.props.onRegionChange){this.props.onRegionChange(event.nativeEvent.region);}}else if(this.props.onRegionChangeComplete){this.props.onRegionChangeComplete(event.nativeEvent.region);}}},{key:\"getCamera\",value:function getCamera(){if(Platform.OS==='android'){return NativeModules.AirMapModule.getCamera(this._getHandle());}else if(Platform.OS==='ios'){return this._runCommand('getCamera',[]);}return Promise.reject('getCamera not supported on this platform');}},{key:\"setCamera\",value:function setCamera(camera){this._runCommand('setCamera',[camera]);}},{key:\"animateCamera\",value:function animateCamera(camera,opts){this._runCommand('animateCamera',[camera,opts&&opts.duration||500]);}},{key:\"animateToNavigation\",value:function animateToNavigation(location,bearing,angle,duration){console.warn('animateToNavigation() is deprecated, use animateCamera() instead');this._runCommand('animateToNavigation',[location,bearing,angle,duration||500]);}},{key:\"animateToRegion\",value:function animateToRegion(region,duration){this._runCommand('animateToRegion',[region,duration||500]);}},{key:\"animateToCoordinate\",value:function animateToCoordinate(latLng,duration){console.warn('animateToCoordinate() is deprecated, use animateCamera() instead');this._runCommand('animateToCoordinate',[latLng,duration||500]);}},{key:\"animateToBearing\",value:function animateToBearing(bearing,duration){console.warn('animateToBearing() is deprecated, use animateCamera() instead');this._runCommand('animateToBearing',[bearing,duration||500]);}},{key:\"animateToViewingAngle\",value:function animateToViewingAngle(angle,duration){console.warn('animateToViewingAngle() is deprecated, use animateCamera() instead');this._runCommand('animateToViewingAngle',[angle,duration||500]);}},{key:\"fitToElements\",value:function fitToElements(animated){this._runCommand('fitToElements',[animated]);}},{key:\"fitToSuppliedMarkers\",value:function fitToSuppliedMarkers(markers){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _options$edgePadding=options.edgePadding,edgePadding=_options$edgePadding===void 0?{top:0,right:0,bottom:0,left:0}:_options$edgePadding,_options$animated=options.animated,animated=_options$animated===void 0?true:_options$animated;this._runCommand('fitToSuppliedMarkers',[markers,edgePadding,animated]);}},{key:\"fitToCoordinates\",value:function fitToCoordinates(){var coordinates=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _options$edgePadding2=options.edgePadding,edgePadding=_options$edgePadding2===void 0?{top:0,right:0,bottom:0,left:0}:_options$edgePadding2,_options$animated2=options.animated,animated=_options$animated2===void 0?true:_options$animated2;this._runCommand('fitToCoordinates',[coordinates,edgePadding,animated]);}},{key:\"getMapBoundaries\",value:function getMapBoundaries(){return _regeneratorRuntime.async(function getMapBoundaries$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(Platform.OS==='android')){_context.next=6;break;}_context.next=3;return _regeneratorRuntime.awrap(NativeModules.AirMapModule.getMapBoundaries(this._getHandle()));case 3:return _context.abrupt(\"return\",_context.sent);case 6:if(!(Platform.OS==='ios')){_context.next=10;break;}_context.next=9;return _regeneratorRuntime.awrap(this._runCommand('getMapBoundaries',[]));case 9:return _context.abrupt(\"return\",_context.sent);case 10:return _context.abrupt(\"return\",Promise.reject('getMapBoundaries not supported on this platform'));case 11:case\"end\":return _context.stop();}}},null,this);}},{key:\"setMapBoundaries\",value:function setMapBoundaries(northEast,southWest){this._runCommand('setMapBoundaries',[northEast,southWest]);}},{key:\"setIndoorActiveLevelIndex\",value:function setIndoorActiveLevelIndex(activeLevelIndex){this._runCommand('setIndoorActiveLevelIndex',[activeLevelIndex]);}},{key:\"takeSnapshot\",value:function takeSnapshot(args){var _this2=this;if(Platform.OS==='ios'&&arguments.length===4){console.warn('Old takeSnapshot API has been deprecated; will be removed in the near future');var width=arguments[0];var height=arguments[1];var region=arguments[2];var callback=arguments[3];this._runCommand('takeSnapshot',[width||0,height||0,region||{},'png',1,'legacy',callback]);return undefined;}var config={width:args.width||0,height:args.height||0,region:args.region||{},format:args.format||'png',quality:args.quality||1.0,result:args.result||'file'};if(config.format!=='png'&&config.format!=='jpg'){throw new Error('Invalid format specified');}if(config.result!=='file'&&config.result!=='base64'){throw new Error('Invalid result specified');}if(Platform.OS==='android'){return NativeModules.AirMapModule.takeSnapshot(this._getHandle(),config);}else if(Platform.OS==='ios'){return new Promise(function(resolve,reject){_this2._runCommand('takeSnapshot',[config.width,config.height,config.region,config.format,config.quality,config.result,function(err,snapshot){if(err){reject(err);}else{resolve(snapshot);}}]);});}return Promise.reject('takeSnapshot not supported on this platform');}},{key:\"pointForCoordinate\",value:function pointForCoordinate(coordinate){if(Platform.OS==='android'){return NativeModules.AirMapModule.pointForCoordinate(this._getHandle(),coordinate);}else if(Platform.OS==='ios'){return this._runCommand('pointForCoordinate',[coordinate]);}return Promise.reject('pointForCoordinate not supported on this platform');}},{key:\"coordinateForPoint\",value:function coordinateForPoint(point){if(Platform.OS==='android'){return NativeModules.AirMapModule.coordinateForPoint(this._getHandle(),point);}else if(Platform.OS==='ios'){return this._runCommand('coordinateForPoint',[point]);}return Promise.reject('coordinateForPoint not supported on this platform');}},{key:\"getMarkersFrames\",value:function getMarkersFrames(){var onlyVisible=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(Platform.OS==='ios'){return this._runCommand('getMarkersFrames',[onlyVisible]);}return Promise.reject('getMarkersFrames not supported on this platform');}},{key:\"boundingBoxForRegion\",value:function boundingBoxForRegion(region){return{northEast:{latitude:region.latitude+region.latitudeDelta/2,longitude:region.longitude+region.longitudeDelta/2},southWest:{latitude:region.latitude-region.latitudeDelta/2,longitude:region.longitude-region.longitudeDelta/2}};}},{key:\"_uiManagerCommand\",value:function _uiManagerCommand(name){var UIManager=NativeModules.UIManager;var componentName=getAirMapName(this.props.provider);if(!UIManager.getViewManagerConfig){return UIManager[componentName].Commands[name];}return UIManager.getViewManagerConfig(componentName).Commands[name];}},{key:\"_mapManagerCommand\",value:function _mapManagerCommand(name){var managerName=getAirMapName(this.props.provider);if(managerName==='UI'){var UIManager=NativeModules.UIManager;if(!UIManager.getViewManagerConfig){return UIManager[name];}return UIManager.getViewManagerConfig(name);}return NativeModules[getAirMapName(this.props.provider)+\"Manager\"][name];}},{key:\"_getHandle\",value:function _getHandle(){return findNodeHandle(this.map);}},{key:\"_runCommand\",value:function _runCommand(name,args){switch(Platform.OS){case'android':return NativeModules.UIManager.dispatchViewManagerCommand(this._getHandle(),this._uiManagerCommand(name),args);case'ios':return this._mapManagerCommand(name).apply(void 0,[this._getHandle()].concat(_toConsumableArray(args)));default:return Promise.reject(\"Invalid platform was passed: \"+Platform.OS);}}},{key:\"render\",value:function render(){var _this3=this;var props;if(this.state.isReady){props=_objectSpread({region:null,initialRegion:null,onMarkerPress:this._onMarkerPress,onChange:this._onChange,onMapReady:this._onMapReady,onLayout:this._onLayout},this.props);if(Platform.OS==='ios'&&props.provider===ProviderConstants.PROVIDER_DEFAULT&&GOOGLE_MAPS_ONLY_TYPES.includes(props.mapType)){props.mapType=MAP_TYPES.standard;}props.handlePanDrag=!!props.onPanDrag;}else{props={style:this.props.style,region:null,initialRegion:null,onMarkerPress:this._onMarkerPress,onChange:this._onChange,onMapReady:this._onMapReady,onLayout:this._onLayout};}if(Platform.OS==='android'&&this.props.liteMode){return React.createElement(AIRMapLite,_extends({ref:function ref(_ref){_this3.map=_ref;}},props));}var AIRMap=getAirMapComponent(this.props.provider);return React.createElement(AIRMap,_extends({ref:function ref(_ref2){_this3.map=_ref2;}},props));}}]);return MapView;}(React.Component);MapView.propTypes=propTypes;MapView.viewConfig=viewConfig;MapView.childContextTypes=childContextTypes;MapView.MAP_TYPES=MAP_TYPES;var nativeComponent=function nativeComponent(Component){return requireNativeComponent(Component,MapView,{nativeOnly:{onChange:true,onMapReady:true,onKmlReady:true,handlePanDrag:true}});};var airMaps={default:nativeComponent('AIRMap')};if(Platform.OS==='android'){airMaps.google=airMaps.default;}else{airMaps.google=googleMapIsInstalled?nativeComponent('AIRGoogleMap'):createNotSupportedComponent('react-native-maps: AirGoogleMaps dir must be added to your xCode project to support GoogleMaps on iOS.');}var getAirMapComponent=function getAirMapComponent(provider){return airMaps[provider||'default'];};var AIRMapLite;if(!NativeModules.UIManager.getViewManagerConfig){AIRMapLite=NativeModules.UIManager.AIRMapLite&&requireNativeComponent('AIRMapLite',MapView,{nativeOnly:{onChange:true,onMapReady:true,handlePanDrag:true}});}else{AIRMapLite=NativeModules.UIManager.getViewManagerConfig('AIRMapLite')&&requireNativeComponent('AIRMapLite',MapView,{nativeOnly:{onChange:true,onMapReady:true,handlePanDrag:true}});}export var Animated=RNAnimated.createAnimatedComponent(MapView);export var ProviderPropType=PropTypes.oneOf(Object.values(ProviderConstants));MapView.Marker=MapMarker;MapView.Polyline=MapPolyline;MapView.Polygon=MapPolygon;MapView.Circle=MapCircle;MapView.UrlTile=MapUrlTile;MapView.MapWMSTile=MapWMSTile;MapView.LocalTile=MapLocalTile;MapView.Overlay=MapOverlay;MapView.Callout=MapCallout;MapView.CalloutSubview=MapCalloutSubview;_extends(MapView,ProviderConstants);MapView.ProviderPropType=ProviderPropType;MapView.Animated=Animated;MapView.AnimatedRegion=AnimatedRegion;export default MapView;","map":{"version":3,"sources":["C:/final project/react native/finalProject-master/node_modules/react-native-maps/lib/components/MapView.js"],"names":["PropTypes","React","requireNativeComponent","MapMarker","MapPolyline","MapPolygon","MapCircle","MapCallout","MapCalloutSubview","MapOverlay","MapUrlTile","MapWMSTile","MapLocalTile","AnimatedRegion","contextTypes","childContextTypes","getAirMapName","googleMapIsInstalled","createNotSupportedComponent","ProviderConstants","MAP_TYPES","STANDARD","SATELLITE","HYBRID","TERRAIN","NONE","MUTEDSTANDARD","GOOGLE_MAPS_ONLY_TYPES","viewConfig","uiViewClassName","validAttributes","region","CameraShape","shape","center","latitude","number","isRequired","longitude","pitch","heading","altitude","zoom","viewPropTypes","ViewPropTypes","View","propTypes","provider","oneOf","style","customMapStyle","array","customMapStyleString","string","showsUserLocation","bool","userLocationAnnotationTitle","showsMyLocationButton","followsUserLocation","showsPointsOfInterest","showsCompass","zoomEnabled","zoomTapEnabled","zoomControlEnabled","rotateEnabled","cacheEnabled","loadingEnabled","loadingBackgroundColor","ColorPropType","loadingIndicatorColor","scrollEnabled","pitchEnabled","toolbarEnabled","moveOnMarkerPress","showsScale","showsBuildings","showsTraffic","showsIndoors","showsIndoorLevelPicker","mapType","Object","values","latitudeDelta","longitudeDelta","initialRegion","camera","initialCamera","liteMode","mapPadding","EdgeInsetsPropType","paddingAdjustmentBehavior","maxDelta","minDelta","legalLabelInsets","onMapReady","func","onKmlReady","onRegionChange","onRegionChangeComplete","onPress","onLongPress","onUserLocationChange","onPanDrag","onPoiClick","onMarkerPress","onMarkerSelect","onMarkerDeselect","onCalloutPress","onMarkerDragStart","onMarkerDrag","onMarkerDragEnd","minZoomLevel","maxZoomLevel","kmlSrc","compassOffset","PointPropType","onIndoorLevelActivated","onIndoorBuildingFocused","MapView","props","state","isReady","Platform","OS","_onMapReady","bind","_onMarkerPress","_onChange","_onLayout","prevProps","_updateStyle","prevState","a","__lastRegion","b","map","setNativeProps","JSON","stringify","setState","e","layout","nativeEvent","width","height","__layoutCalled","onLayout","event","continuous","NativeModules","AirMapModule","getCamera","_getHandle","_runCommand","Promise","reject","opts","duration","location","bearing","angle","console","warn","latLng","animated","markers","options","edgePadding","top","right","bottom","left","coordinates","getMapBoundaries","northEast","southWest","activeLevelIndex","args","arguments","length","callback","undefined","config","format","quality","result","Error","takeSnapshot","resolve","err","snapshot","coordinate","pointForCoordinate","point","coordinateForPoint","onlyVisible","name","UIManager","componentName","getViewManagerConfig","Commands","managerName","findNodeHandle","dispatchViewManagerCommand","_uiManagerCommand","_mapManagerCommand","onChange","PROVIDER_DEFAULT","includes","standard","handlePanDrag","ref","AIRMap","getAirMapComponent","Component","nativeComponent","nativeOnly","airMaps","default","google","AIRMapLite","Animated","RNAnimated","createAnimatedComponent","ProviderPropType","Marker","Polyline","Polygon","Circle","UrlTile","LocalTile","Overlay","Callout","CalloutSubview"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  EdgeInsetsPropType,\n  PointPropType,\n  Platform,\n  Animated as RNAnimated,\n  requireNativeComponent,\n  NativeModules,\n  ColorPropType,\n  findNodeHandle,\n  ViewPropTypes,\n  View,\n} from 'react-native';\nimport MapMarker from './MapMarker';\nimport MapPolyline from './MapPolyline';\nimport MapPolygon from './MapPolygon';\nimport MapCircle from './MapCircle';\nimport MapCallout from './MapCallout';\nimport MapCalloutSubview from './MapCalloutSubview';\nimport MapOverlay from './MapOverlay';\nimport MapUrlTile from './MapUrlTile';\nimport MapWMSTile from './MapWMSTile';\nimport MapLocalTile from './MapLocalTile';\nimport AnimatedRegion from './AnimatedRegion';\nimport {\n  contextTypes as childContextTypes,\n  getAirMapName,\n  googleMapIsInstalled,\n  createNotSupportedComponent,\n} from './decorateMapComponent';\nimport * as ProviderConstants from './ProviderConstants';\n\nexport const MAP_TYPES = {\n  STANDARD: 'standard',\n  SATELLITE: 'satellite',\n  HYBRID: 'hybrid',\n  TERRAIN: 'terrain',\n  NONE: 'none',\n  MUTEDSTANDARD: 'mutedStandard',\n};\n\nconst GOOGLE_MAPS_ONLY_TYPES = [MAP_TYPES.TERRAIN, MAP_TYPES.NONE];\n\nconst viewConfig = {\n  uiViewClassName: 'AIR<provider>Map',\n  validAttributes: {\n    region: true,\n  },\n};\n\n/**\n * Defines the map camera.\n */\nconst CameraShape = PropTypes.shape({\n  center: PropTypes.shape({\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired,\n  }),\n  pitch: PropTypes.number.isRequired,\n  heading: PropTypes.number.isRequired,\n  altitude: PropTypes.number.isRequired,\n  zoom: PropTypes.number.isRequired,\n});\n\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\nconst propTypes = {\n  ...viewPropTypes,\n  /**\n   * When provider is \"google\", we will use GoogleMaps.\n   * Any value other than \"google\" will default to using\n   * MapKit in iOS or GoogleMaps in android as the map provider.\n   */\n  provider: PropTypes.oneOf(['google']),\n\n  /**\n   * Used to style and layout the `MapView`.  See `StyleSheet.js` and\n   * `ViewStylePropTypes.js` for more info.\n   */\n  style: viewPropTypes.style,\n\n  /**\n   * A json object that describes the style of the map. This is transformed to a string\n   * and saved in mayStyleString to be sent to android and ios\n   * https://developers.google.com/maps/documentation/ios-sdk/styling#use_a_string_resource\n   * https://developers.google.com/maps/documentation/android-api/styling\n   */\n  customMapStyle: PropTypes.array,\n\n  /**\n   * A json string that describes the style of the map\n   * https://developers.google.com/maps/documentation/ios-sdk/styling#use_a_string_resource\n   * https://developers.google.com/maps/documentation/android-api/styling\n   */\n  customMapStyleString: PropTypes.string,\n\n  /**\n   * If `true` the app will ask for the user's location.\n   * Default value is `false`.\n   *\n   * **NOTE**: You need to add NSLocationWhenInUseUsageDescription key in\n   * Info.plist to enable geolocation, otherwise it is going\n   * to *fail silently*! You will also need to add an explanation for why\n   * you need the users location against `NSLocationWhenInUseUsageDescription` in Info.plist.\n   * Otherwise Apple may reject your app submission.\n   */\n  showsUserLocation: PropTypes.bool,\n\n  /**\n   * The title of the annotation for current user location. This only works if\n   * `showsUserLocation` is true.\n   * There is a default value `My Location` set by MapView.\n   *\n   * @platform ios\n   */\n  userLocationAnnotationTitle: PropTypes.string,\n\n  /**\n   * If `false` hide the button to move map to the current user's location.\n   * Default value is `true`.\n   *\n   * @platform android\n   */\n  showsMyLocationButton: PropTypes.bool,\n\n  /**\n   * If `true` the map will focus on the user's location. This only works if\n   * `showsUserLocation` is true and the user has shared their location.\n   * Default value is `false`.\n   *\n   * @platform ios\n   */\n  followsUserLocation: PropTypes.bool,\n\n  /**\n   * If `false` points of interest won't be displayed on the map.\n   * Default value is `true`.\n   *\n   */\n  showsPointsOfInterest: PropTypes.bool,\n\n  /**\n   * If `false` compass won't be displayed on the map.\n   * Default value is `true`.\n   *\n   * @platform ios\n   */\n  showsCompass: PropTypes.bool,\n\n  /**\n   * If `false` the user won't be able to pinch/zoom the map.\n   * Default value is `true`.\n   *\n   */\n  zoomEnabled: PropTypes.bool,\n\n  /**\n   * If `false` the user won't be able to double tap to zoom the map.\n   * However it will greatly decrease delay of tap gesture recognition.\n   * Default value is `true`.\n   *\n   */\n  zoomTapEnabled: PropTypes.bool,\n\n  /**\n   *If `false` the user won't be able to zoom the map\n   * Default value is `true`.\n   *\n   *@platform android\n   */\n  zoomControlEnabled: PropTypes.bool,\n\n  /**\n   * If `false` the user won't be able to pinch/rotate the map.\n   * Default value is `true`.\n   *\n   */\n  rotateEnabled: PropTypes.bool,\n\n  /**\n   * If `true` the map will be cached to an Image for performance\n   * Default value is `false`.\n   *\n   */\n  cacheEnabled: PropTypes.bool,\n\n  /**\n   * If `true` the map will be showing a loading indicator\n   * Default value is `false`.\n   *\n   */\n  loadingEnabled: PropTypes.bool,\n\n  /**\n   * Loading background color while generating map cache image or loading the map\n   * Default color is light gray.\n   *\n   */\n  loadingBackgroundColor: ColorPropType,\n\n  /**\n   * Loading indicator color while generating map cache image or loading the map\n   * Default color is gray color for iOS, theme color for Android.\n   *\n   */\n  loadingIndicatorColor: ColorPropType,\n\n  /**\n   * If `false` the user won't be able to change the map region being displayed.\n   * Default value is `true`.\n   *\n   */\n  scrollEnabled: PropTypes.bool,\n\n  /**\n   * If `false` the user won't be able to adjust the camera’s pitch angle.\n   * Default value is `true`.\n   *\n   */\n  pitchEnabled: PropTypes.bool,\n\n  /**\n   * If `false` will hide 'Navigate' and 'Open in Maps' buttons on marker press\n   * Default value is `true`.\n   *\n   * @platform android\n   */\n  toolbarEnabled: PropTypes.bool,\n\n  /**\n   * A Boolean indicating whether on marker press the map will move to the pressed marker\n   * Default value is `true`\n   *\n   * @platform android\n   */\n  moveOnMarkerPress: PropTypes.bool,\n\n  /**\n   * A Boolean indicating whether the map shows scale information.\n   * Default value is `false`\n   *\n   * @platform ios\n   */\n  showsScale: PropTypes.bool,\n\n  /**\n   * A Boolean indicating whether the map displays extruded building information.\n   * Default value is `true`.\n   */\n  showsBuildings: PropTypes.bool,\n\n  /**\n   * A Boolean value indicating whether the map displays traffic information.\n   * Default value is `false`.\n   */\n  showsTraffic: PropTypes.bool,\n\n  /**\n   * A Boolean indicating whether indoor maps should be enabled.\n   * Default value is `false`\n   *\n   * @platform android\n   */\n  showsIndoors: PropTypes.bool,\n\n  /**\n   * A Boolean indicating whether indoor level picker should be enabled.\n   * Default value is `false`\n   *\n   * @platform android\n   */\n  showsIndoorLevelPicker: PropTypes.bool,\n\n  /**\n   * The map type to be displayed.\n   *\n   * - standard: standard road map (default)\n   * - satellite: satellite view\n   * - hybrid: satellite view with roads and points of interest overlayed\n   * - terrain: topographic view\n   * - none: no base map\n   */\n  mapType: PropTypes.oneOf(Object.values(MAP_TYPES)),\n\n  /**\n   * The region to be displayed by the map.\n   *\n   * The region is defined by the center coordinates and the span of\n   * coordinates to display.\n   */\n  region: PropTypes.shape({\n    /**\n     * Coordinates for the center of the map.\n     */\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired,\n\n    /**\n     * Difference between the minimun and the maximum latitude/longitude\n     * to be displayed.\n     */\n    latitudeDelta: PropTypes.number.isRequired,\n    longitudeDelta: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * The initial region to be displayed by the map.  Use this prop instead of `region`\n   * only if you don't want to control the viewport of the map besides the initial region.\n   *\n   * Changing this prop after the component has mounted will not result in a region change.\n   *\n   * This is similar to the `initialValue` prop of a text input.\n   */\n  initialRegion: PropTypes.shape({\n    /**\n     * Coordinates for the center of the map.\n     */\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired,\n\n    /**\n     * Difference between the minimun and the maximum latitude/longitude\n     * to be displayed.\n     */\n    latitudeDelta: PropTypes.number.isRequired,\n    longitudeDelta: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * The camera view the map should use.\n   *\n   * Use the camera system, instead of the region system, if you need control over\n   * the pitch or heading.\n   */\n  camera: CameraShape,\n\n  /**\n   * The initial camera view the map should use.  Use this prop instead of `camera`\n   * only if you don't want to control the camera of the map besides the initial view.\n   *\n   * Use the camera system, instead of the region system, if you need control over\n   * the pitch or heading.\n   *\n   * Changing this prop after the component has mounted will not result in a camera change.\n   *\n   * This is similar to the `initialValue` prop of a text input.\n   */\n  initialCamera: CameraShape,\n\n  /**\n   * A Boolean indicating whether to use liteMode for android\n   * Default value is `false`\n   *\n   * @platform android\n   */\n  liteMode: PropTypes.bool,\n\n  /**\n   * (Google Maps only)\n   *\n   * Padding that is used by the Google Map View to position\n   * the camera, legal labels and buttons\n   *\n   */\n  mapPadding: EdgeInsetsPropType,\n\n  /**\n   * (Google Maps only, iOS)\n   *\n   * Whether the safe area padding is added to the Google Map View padding.\n   * This affects where markers, compass, Google logo etc. are placed on the view.\n   *\n   */\n  paddingAdjustmentBehavior: PropTypes.oneOf(['always', 'automatic', 'never']),\n\n  /**\n   * Maximum size of area that can be displayed.\n   *\n   * @platform ios\n   */\n  maxDelta: PropTypes.number,\n\n  /**\n   * Minimum size of area that can be displayed.\n   *\n   * @platform ios\n   */\n  minDelta: PropTypes.number,\n\n  /**\n   * Insets for the map's legal label, originally at bottom left of the map.\n   * See `EdgeInsetsPropType.js` for more information.\n   */\n  legalLabelInsets: EdgeInsetsPropType,\n\n  /**\n   * Callback that is called once the map is fully loaded.\n   */\n  onMapReady: PropTypes.func,\n\n  /**\n   * Callback that is called once the kml is fully loaded.\n   */\n  onKmlReady: PropTypes.func,\n\n  /**\n   * Callback that is called continuously when the user is dragging the map.\n   */\n  onRegionChange: PropTypes.func,\n\n  /**\n   * Callback that is called once, when the user is done moving the map.\n   */\n  onRegionChangeComplete: PropTypes.func,\n\n  /**\n   * Callback that is called when user taps on the map.\n   */\n  onPress: PropTypes.func,\n\n  /**\n   * Callback that is called when user makes a \"long press\" somewhere on the map.\n   */\n  onLongPress: PropTypes.func,\n\n  /**\n   * Callback that is called when the underlying map figures our users current location.\n   */\n  onUserLocationChange: PropTypes.func,\n\n  /**\n   * Callback that is called when user makes a \"drag\" somewhere on the map\n   */\n  onPanDrag: PropTypes.func,\n\n  /**\n   * Callback that is called when user click on a POI\n   */\n  onPoiClick: PropTypes.func,\n\n  /**\n   * Callback that is called when a marker on the map is tapped by the user.\n   */\n  onMarkerPress: PropTypes.func,\n\n  /**\n   * Callback that is called when a marker on the map becomes selected. This will be called when\n   * the callout for that marker is about to be shown.\n   *\n   * @platform ios\n   */\n  onMarkerSelect: PropTypes.func,\n\n  /**\n   * Callback that is called when a marker on the map becomes deselected. This will be called when\n   * the callout for that marker is about to be hidden.\n   *\n   * @platform ios\n   */\n  onMarkerDeselect: PropTypes.func,\n\n  /**\n   * Callback that is called when a callout is tapped by the user.\n   */\n  onCalloutPress: PropTypes.func,\n\n  /**\n   * Callback that is called when the user initiates a drag on a marker (if it is draggable)\n   */\n  onMarkerDragStart: PropTypes.func,\n\n  /**\n   * Callback called continuously as a marker is dragged\n   */\n  onMarkerDrag: PropTypes.func,\n\n  /**\n   * Callback that is called when a drag on a marker finishes. This is usually the point you\n   * will want to setState on the marker's coordinate again\n   */\n  onMarkerDragEnd: PropTypes.func,\n\n  /**\n   * Minimum zoom value for the map, must be between 0 and 20\n   */\n  minZoomLevel: PropTypes.number,\n\n  /**\n   * Maximum zoom value for the map, must be between 0 and 20\n   */\n  maxZoomLevel: PropTypes.number,\n\n  /**\n   * Url KML Source\n   */\n  kmlSrc: PropTypes.string,\n\n  /**\n   * Offset Point x y for compass location.\n   *\n   * @platform ios\n   */\n  compassOffset: PointPropType,\n\n  /**\n   * Callback that is called when a level is activated on a indoor building.\n   */\n  onIndoorLevelActivated: PropTypes.func,\n\n  /**\n   * Callback that is called when a Building is focused.\n   */\n  onIndoorBuildingFocused: PropTypes.func,\n};\n\nclass MapView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isReady: Platform.OS === 'ios',\n    };\n\n    this._onMapReady = this._onMapReady.bind(this);\n    this._onMarkerPress = this._onMarkerPress.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onLayout = this._onLayout.bind(this);\n  }\n\n  getChildContext() {\n    return { provider: this.props.provider };\n  }\n\n  getSnapshotBeforeUpdate(prevProps) {\n    if (\n      this.state.isReady &&\n      this.props.customMapStyle !== prevProps.customMapStyle\n    ) {\n      this._updateStyle(this.props);\n    }\n    return this.props.region || null;\n  }\n\n  componentDidUpdate(prevProps, prevState, region) {\n    const a = this.__lastRegion;\n    const b = region;\n    if (!a || !b) {\n      return;\n    }\n    if (\n      a.latitude !== b.latitude ||\n      a.longitude !== b.longitude ||\n      a.latitudeDelta !== b.latitudeDelta ||\n      a.longitudeDelta !== b.longitudeDelta\n    ) {\n      this.map.setNativeProps({ region: b });\n    }\n  }\n\n  componentDidMount() {\n    const { isReady } = this.state;\n    if (isReady) {\n      this._updateStyle(this.props);\n    }\n  }\n\n  _updateStyle(props) {\n    const { customMapStyle } = props;\n    this.map.setNativeProps({\n      customMapStyleString: JSON.stringify(customMapStyle),\n    });\n  }\n\n  _onMapReady() {\n    const { region, initialRegion, onMapReady } = this.props;\n    if (region) {\n      this.map.setNativeProps({ region });\n    } else if (initialRegion) {\n      this.map.setNativeProps({ initialRegion });\n    }\n    this._updateStyle(this.props);\n    this.setState({ isReady: true }, () => {\n      if (onMapReady) {\n        onMapReady();\n      }\n    });\n  }\n\n  _onLayout(e) {\n    const { layout } = e.nativeEvent;\n    if (!layout.width || !layout.height) {\n      return;\n    }\n    if (this.state.isReady && !this.__layoutCalled) {\n      const { region, initialRegion } = this.props;\n      if (region) {\n        this.__layoutCalled = true;\n        this.map.setNativeProps({ region });\n      } else if (initialRegion) {\n        this.__layoutCalled = true;\n        this.map.setNativeProps({ initialRegion });\n      }\n    }\n    if (this.props.onLayout) {\n      this.props.onLayout(e);\n    }\n  }\n\n  _onMarkerPress(event) {\n    if (this.props.onMarkerPress) {\n      this.props.onMarkerPress(event.nativeEvent);\n    }\n  }\n\n  _onChange(event) {\n    this.__lastRegion = event.nativeEvent.region;\n    if (event.nativeEvent.continuous) {\n      if (this.props.onRegionChange) {\n        this.props.onRegionChange(event.nativeEvent.region);\n      }\n    } else if (this.props.onRegionChangeComplete) {\n      this.props.onRegionChangeComplete(event.nativeEvent.region);\n    }\n  }\n\n  getCamera() {\n    if (Platform.OS === 'android') {\n      return NativeModules.AirMapModule.getCamera(this._getHandle());\n    } else if (Platform.OS === 'ios') {\n      return this._runCommand('getCamera', []);\n    }\n    return Promise.reject('getCamera not supported on this platform');\n  }\n\n  setCamera(camera) {\n    this._runCommand('setCamera', [camera]);\n  }\n\n  animateCamera(camera, opts) {\n    this._runCommand('animateCamera', [camera, (opts && opts.duration) || 500]);\n  }\n\n  animateToNavigation(location, bearing, angle, duration) {\n    console.warn(\n      'animateToNavigation() is deprecated, use animateCamera() instead'\n    );\n    this._runCommand('animateToNavigation', [\n      location,\n      bearing,\n      angle,\n      duration || 500,\n    ]);\n  }\n\n  animateToRegion(region, duration) {\n    this._runCommand('animateToRegion', [region, duration || 500]);\n  }\n\n  animateToCoordinate(latLng, duration) {\n    console.warn(\n      'animateToCoordinate() is deprecated, use animateCamera() instead'\n    );\n    this._runCommand('animateToCoordinate', [latLng, duration || 500]);\n  }\n\n  animateToBearing(bearing, duration) {\n    console.warn(\n      'animateToBearing() is deprecated, use animateCamera() instead'\n    );\n    this._runCommand('animateToBearing', [bearing, duration || 500]);\n  }\n\n  animateToViewingAngle(angle, duration) {\n    console.warn(\n      'animateToViewingAngle() is deprecated, use animateCamera() instead'\n    );\n    this._runCommand('animateToViewingAngle', [angle, duration || 500]);\n  }\n\n  fitToElements(animated) {\n    this._runCommand('fitToElements', [animated]);\n  }\n\n  fitToSuppliedMarkers(markers, options = {}) {\n    const {\n      edgePadding = { top: 0, right: 0, bottom: 0, left: 0 },\n      animated = true,\n    } = options;\n\n    this._runCommand('fitToSuppliedMarkers', [markers, edgePadding, animated]);\n  }\n\n  fitToCoordinates(coordinates = [], options = {}) {\n    const {\n      edgePadding = { top: 0, right: 0, bottom: 0, left: 0 },\n      animated = true,\n    } = options;\n\n    this._runCommand('fitToCoordinates', [coordinates, edgePadding, animated]);\n  }\n\n  /**\n   * Get visible boudaries\n   *\n   * @return Promise Promise with the bounding box ({ northEast: <LatLng>, southWest: <LatLng> })\n   */\n  async getMapBoundaries() {\n    if (Platform.OS === 'android') {\n      return await NativeModules.AirMapModule.getMapBoundaries(\n        this._getHandle()\n      );\n    } else if (Platform.OS === 'ios') {\n      return await this._runCommand('getMapBoundaries', []);\n    }\n    return Promise.reject('getMapBoundaries not supported on this platform');\n  }\n\n  setMapBoundaries(northEast, southWest) {\n    this._runCommand('setMapBoundaries', [northEast, southWest]);\n  }\n\n  setIndoorActiveLevelIndex(activeLevelIndex) {\n    this._runCommand('setIndoorActiveLevelIndex', [activeLevelIndex]);\n  }\n\n  /**\n   * Takes a snapshot of the map and saves it to a picture\n   * file or returns the image as a base64 encoded string.\n   *\n   * @param config Configuration options\n   * @param [config.width] Width of the rendered map-view (when omitted actual view width is used).\n   * @param [config.height] Height of the rendered map-view (when omitted actual height is used).\n   * @param [config.region] Region to render (Only supported on iOS).\n   * @param [config.format] Encoding format ('png', 'jpg') (default: 'png').\n   * @param [config.quality] Compression quality (only used for jpg) (default: 1.0).\n   * @param [config.result] Result format ('file', 'base64') (default: 'file').\n   *\n   * @return Promise Promise with either the file-uri or base64 encoded string\n   */\n  takeSnapshot(args) {\n    // For the time being we support the legacy API on iOS.\n    // This will be removed in a future release and only the\n    // new Promise style API shall be supported.\n    if (Platform.OS === 'ios' && arguments.length === 4) {\n      console.warn(\n        'Old takeSnapshot API has been deprecated; will be removed in the near future'\n      );\n      const width = arguments[0];\n      const height = arguments[1];\n      const region = arguments[2];\n      const callback = arguments[3];\n      this._runCommand('takeSnapshot', [\n        width || 0,\n        height || 0,\n        region || {},\n        'png',\n        1,\n        'legacy',\n        callback,\n      ]);\n      return undefined;\n    }\n\n    // Sanitize inputs\n    const config = {\n      width: args.width || 0,\n      height: args.height || 0,\n      region: args.region || {},\n      format: args.format || 'png',\n      quality: args.quality || 1.0,\n      result: args.result || 'file',\n    };\n    if (config.format !== 'png' && config.format !== 'jpg') {\n      throw new Error('Invalid format specified');\n    }\n    if (config.result !== 'file' && config.result !== 'base64') {\n      throw new Error('Invalid result specified');\n    }\n\n    // Call native function\n    if (Platform.OS === 'android') {\n      return NativeModules.AirMapModule.takeSnapshot(this._getHandle(), config);\n    } else if (Platform.OS === 'ios') {\n      return new Promise((resolve, reject) => {\n        this._runCommand('takeSnapshot', [\n          config.width,\n          config.height,\n          config.region,\n          config.format,\n          config.quality,\n          config.result,\n          (err, snapshot) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(snapshot);\n            }\n          },\n        ]);\n      });\n    }\n    return Promise.reject('takeSnapshot not supported on this platform');\n  }\n\n  /**\n   * Convert a map coordinate to user-space point\n   *\n   * @param coordinate Coordinate\n   * @param [coordinate.latitude] Latitude\n   * @param [coordinate.longitude] Longitude\n   *\n   * @return Promise Promise with the point ({ x: Number, y: Number })\n   */\n  pointForCoordinate(coordinate) {\n    if (Platform.OS === 'android') {\n      return NativeModules.AirMapModule.pointForCoordinate(\n        this._getHandle(),\n        coordinate\n      );\n    } else if (Platform.OS === 'ios') {\n      return this._runCommand('pointForCoordinate', [coordinate]);\n    }\n    return Promise.reject('pointForCoordinate not supported on this platform');\n  }\n\n  /**\n   * Convert a user-space point to a map coordinate\n   *\n   * @param point Point\n   * @param [point.x] X\n   * @param [point.x] Y\n   *\n   * @return Promise Promise with the coordinate ({ latitude: Number, longitude: Number })\n   */\n  coordinateForPoint(point) {\n    if (Platform.OS === 'android') {\n      return NativeModules.AirMapModule.coordinateForPoint(\n        this._getHandle(),\n        point\n      );\n    } else if (Platform.OS === 'ios') {\n      return this._runCommand('coordinateForPoint', [point]);\n    }\n    return Promise.reject('coordinateForPoint not supported on this platform');\n  }\n\n  /**\n   * Get markers' centers and frames in user-space coordinates\n   *\n   * @param onlyVisible boolean true to include only visible markers, false to include all\n   *\n   * @return Promise Promise with { <identifier>: { point: Point, frame: Frame } }\n   */\n  getMarkersFrames(onlyVisible = false) {\n    if (Platform.OS === 'ios') {\n      return this._runCommand('getMarkersFrames', [onlyVisible]);\n    }\n    return Promise.reject('getMarkersFrames not supported on this platform');\n  }\n\n  /**\n   * Get bounding box from region\n   *\n   * @param region Region\n   *\n   * @return Object Object bounding box ({ northEast: <LatLng>, southWest: <LatLng> })\n   */\n  boundingBoxForRegion(region) {\n    return {\n      northEast: {\n        latitude: region.latitude + region.latitudeDelta / 2,\n        longitude: region.longitude + region.longitudeDelta / 2,\n      },\n      southWest: {\n        latitude: region.latitude - region.latitudeDelta / 2,\n        longitude: region.longitude - region.longitudeDelta / 2,\n      },\n    };\n  }\n\n  _uiManagerCommand(name) {\n    const UIManager = NativeModules.UIManager;\n    const componentName = getAirMapName(this.props.provider);\n\n    if (!UIManager.getViewManagerConfig) {\n      // RN < 0.58\n      return UIManager[componentName].Commands[name];\n    }\n\n    // RN >= 0.58\n    return UIManager.getViewManagerConfig(componentName).Commands[name];\n  }\n\n  _mapManagerCommand(name) {\n    const managerName = getAirMapName(this.props.provider);\n\n    if (managerName === 'UI') {\n      const UIManager = NativeModules.UIManager;\n      if (!UIManager.getViewManagerConfig) {\n        // RN < 0.58\n        return UIManager[name];\n      }\n\n      // RN >= 0.58\n      return UIManager.getViewManagerConfig(name);\n    }\n\n    return NativeModules[`${getAirMapName(this.props.provider)}Manager`][name];\n  }\n\n  _getHandle() {\n    return findNodeHandle(this.map);\n  }\n\n  _runCommand(name, args) {\n    switch (Platform.OS) {\n      case 'android':\n        return NativeModules.UIManager.dispatchViewManagerCommand(\n          this._getHandle(),\n          this._uiManagerCommand(name),\n          args\n        );\n\n      case 'ios':\n        return this._mapManagerCommand(name)(this._getHandle(), ...args);\n\n      default:\n        return Promise.reject(`Invalid platform was passed: ${Platform.OS}`);\n    }\n  }\n\n  render() {\n    let props;\n\n    if (this.state.isReady) {\n      props = {\n        region: null,\n        initialRegion: null,\n        onMarkerPress: this._onMarkerPress,\n        onChange: this._onChange,\n        onMapReady: this._onMapReady,\n        onLayout: this._onLayout,\n        ...this.props,\n      };\n      if (\n        Platform.OS === 'ios' &&\n        props.provider === ProviderConstants.PROVIDER_DEFAULT &&\n        GOOGLE_MAPS_ONLY_TYPES.includes(props.mapType)\n      ) {\n        props.mapType = MAP_TYPES.standard;\n      }\n      props.handlePanDrag = !!props.onPanDrag;\n    } else {\n      props = {\n        style: this.props.style,\n        region: null,\n        initialRegion: null,\n        onMarkerPress: this._onMarkerPress,\n        onChange: this._onChange,\n        onMapReady: this._onMapReady,\n        onLayout: this._onLayout,\n      };\n    }\n\n    if (Platform.OS === 'android' && this.props.liteMode) {\n      return (\n        <AIRMapLite\n          ref={ref => {\n            this.map = ref;\n          }}\n          {...props}\n        />\n      );\n    }\n\n    const AIRMap = getAirMapComponent(this.props.provider);\n\n    return (\n      <AIRMap\n        ref={ref => {\n          this.map = ref;\n        }}\n        {...props}\n      />\n    );\n  }\n}\n\nMapView.propTypes = propTypes;\nMapView.viewConfig = viewConfig;\nMapView.childContextTypes = childContextTypes;\n\nMapView.MAP_TYPES = MAP_TYPES;\n\nconst nativeComponent = Component =>\n  requireNativeComponent(Component, MapView, {\n    nativeOnly: {\n      onChange: true,\n      onMapReady: true,\n      onKmlReady: true,\n      handlePanDrag: true,\n    },\n  });\nconst airMaps = {\n  default: nativeComponent('AIRMap'),\n};\nif (Platform.OS === 'android') {\n  airMaps.google = airMaps.default;\n} else {\n  airMaps.google = googleMapIsInstalled\n    ? nativeComponent('AIRGoogleMap')\n    : createNotSupportedComponent(\n        'react-native-maps: AirGoogleMaps dir must be added to your xCode project to support GoogleMaps on iOS.'\n      );\n}\nconst getAirMapComponent = provider => airMaps[provider || 'default'];\n\nlet AIRMapLite;\nif (!NativeModules.UIManager.getViewManagerConfig) {\n  // RN < 0.58\n  AIRMapLite =\n    NativeModules.UIManager.AIRMapLite &&\n    requireNativeComponent('AIRMapLite', MapView, {\n      nativeOnly: {\n        onChange: true,\n        onMapReady: true,\n        handlePanDrag: true,\n      },\n    });\n} else {\n  // RN >= 0.58\n  AIRMapLite =\n    NativeModules.UIManager.getViewManagerConfig('AIRMapLite') &&\n    requireNativeComponent('AIRMapLite', MapView, {\n      nativeOnly: {\n        onChange: true,\n        onMapReady: true,\n        handlePanDrag: true,\n      },\n    });\n}\n\nexport const Animated = RNAnimated.createAnimatedComponent(MapView);\n\nexport const ProviderPropType = PropTypes.oneOf(\n  Object.values(ProviderConstants)\n);\n\n/**\n * TODO:\n * All of these properties on MapView are unecessary since they can be imported\n * individually with the es6 exports in index.js. Removing them is a breaking change,\n * but potentially allows for better dead code elimination since references are not\n * kept to components which are never used.\n */\n\nMapView.Marker = MapMarker;\nMapView.Polyline = MapPolyline;\nMapView.Polygon = MapPolygon;\nMapView.Circle = MapCircle;\nMapView.UrlTile = MapUrlTile;\nMapView.MapWMSTile = MapWMSTile;\nMapView.LocalTile = MapLocalTile;\nMapView.Overlay = MapOverlay;\nMapView.Callout = MapCallout;\nMapView.CalloutSubview = MapCalloutSubview;\nObject.assign(MapView, ProviderConstants);\nMapView.ProviderPropType = ProviderPropType;\n\nMapView.Animated = Animated;\nMapView.AnimatedRegion = AnimatedRegion;\n\nexport default MapView;\n"]},"metadata":{},"sourceType":"module"}