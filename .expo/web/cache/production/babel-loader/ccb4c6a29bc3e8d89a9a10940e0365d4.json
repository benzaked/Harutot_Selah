{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import PropTypes from'prop-types';import React from'react';import ColorPropType from\"react-native-web/dist/exports/ColorPropType\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";import Animated from\"react-native-web/dist/exports/Animated\";import Image from\"react-native-web/dist/exports/Image\";import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import ViewPropTypes from\"react-native-web/dist/exports/ViewPropTypes\";import View from\"react-native-web/dist/exports/View\";import decorateMapComponent,{SUPPORTED,USES_DEFAULT_IMPLEMENTATION}from\"./decorateMapComponent\";var viewConfig={uiViewClassName:'AIR<provider>MapMarker',validAttributes:{coordinate:true}};var viewPropTypes=ViewPropTypes||View.propTypes;var propTypes=_objectSpread({},viewPropTypes,{identifier:PropTypes.string,reuseIdentifier:PropTypes.string,title:PropTypes.string,description:PropTypes.string,testID:PropTypes.string,image:PropTypes.any,icon:PropTypes.any,opacity:PropTypes.number,pinColor:ColorPropType,coordinate:PropTypes.shape({latitude:PropTypes.number.isRequired,longitude:PropTypes.number.isRequired}).isRequired,centerOffset:PropTypes.shape({x:PropTypes.number.isRequired,y:PropTypes.number.isRequired}),calloutOffset:PropTypes.shape({x:PropTypes.number.isRequired,y:PropTypes.number.isRequired}),anchor:PropTypes.shape({x:PropTypes.number.isRequired,y:PropTypes.number.isRequired}),calloutAnchor:PropTypes.shape({x:PropTypes.number.isRequired,y:PropTypes.number.isRequired}),flat:PropTypes.bool,draggable:PropTypes.bool,tracksViewChanges:PropTypes.bool,tracksInfoWindowChanges:PropTypes.bool,stopPropagation:PropTypes.bool,onPress:PropTypes.func,onSelect:PropTypes.func,onDeselect:PropTypes.func,onCalloutPress:PropTypes.func,onDragStart:PropTypes.func,onDrag:PropTypes.func,onDragEnd:PropTypes.func});var defaultProps={stopPropagation:false};var MapMarker=function(_React$Component){_inherits(MapMarker,_React$Component);function MapMarker(props){var _this;_classCallCheck(this,MapMarker);_this=_possibleConstructorReturn(this,_getPrototypeOf(MapMarker).call(this,props));_this.showCallout=_this.showCallout.bind(_assertThisInitialized(_this));_this.hideCallout=_this.hideCallout.bind(_assertThisInitialized(_this));_this.redrawCallout=_this.redrawCallout.bind(_assertThisInitialized(_this));_this.animateMarkerToCoordinate=_this.animateMarkerToCoordinate.bind(_assertThisInitialized(_this));return _this;}_createClass(MapMarker,[{key:\"setNativeProps\",value:function setNativeProps(props){this.marker.setNativeProps(props);}},{key:\"showCallout\",value:function showCallout(){this._runCommand('showCallout',[]);}},{key:\"hideCallout\",value:function hideCallout(){this._runCommand('hideCallout',[]);}},{key:\"redrawCallout\",value:function redrawCallout(){this._runCommand('redrawCallout',[]);}},{key:\"animateMarkerToCoordinate\",value:function animateMarkerToCoordinate(coordinate,duration){this._runCommand('animateMarkerToCoordinate',[coordinate,duration||500]);}},{key:\"redraw\",value:function redraw(){this._runCommand('redraw',[]);}},{key:\"_getHandle\",value:function _getHandle(){return findNodeHandle(this.marker);}},{key:\"_runCommand\",value:function _runCommand(name,args){switch(Platform.OS){case'android':NativeModules.UIManager.dispatchViewManagerCommand(this._getHandle(),this.getUIManagerCommand(name),args);break;case'ios':this.getMapManagerCommand(name).apply(void 0,[this._getHandle()].concat(_toConsumableArray(args)));break;default:break;}}},{key:\"render\",value:function render(){var _this2=this;var image;if(this.props.image){image=Image.resolveAssetSource(this.props.image)||{};image=image.uri||this.props.image;}var icon;if(this.props.icon){icon=Image.resolveAssetSource(this.props.icon)||{};icon=icon.uri;}var AIRMapMarker=this.getAirComponent();return React.createElement(AIRMapMarker,_extends({ref:function ref(_ref){_this2.marker=_ref;}},this.props,{image:image,icon:icon,style:[styles.marker,this.props.style],onPress:function onPress(event){if(_this2.props.stopPropagation){event.stopPropagation();}if(_this2.props.onPress){_this2.props.onPress(event);}}}));}}]);return MapMarker;}(React.Component);MapMarker.propTypes=propTypes;MapMarker.defaultProps=defaultProps;MapMarker.viewConfig=viewConfig;var styles=StyleSheet.create({marker:{position:'absolute',backgroundColor:'transparent'}});MapMarker.Animated=Animated.createAnimatedComponent(MapMarker);export default decorateMapComponent(MapMarker,{componentType:'Marker',providers:{google:{ios:SUPPORTED,android:USES_DEFAULT_IMPLEMENTATION}}});","map":{"version":3,"sources":["C:/final project/react native/finalProject-master/node_modules/react-native-maps/lib/components/MapMarker.js"],"names":["PropTypes","React","decorateMapComponent","SUPPORTED","USES_DEFAULT_IMPLEMENTATION","viewConfig","uiViewClassName","validAttributes","coordinate","viewPropTypes","ViewPropTypes","View","propTypes","identifier","string","reuseIdentifier","title","description","testID","image","any","icon","opacity","number","pinColor","ColorPropType","shape","latitude","isRequired","longitude","centerOffset","x","y","calloutOffset","anchor","calloutAnchor","flat","bool","draggable","tracksViewChanges","tracksInfoWindowChanges","stopPropagation","onPress","func","onSelect","onDeselect","onCalloutPress","onDragStart","onDrag","onDragEnd","defaultProps","MapMarker","props","showCallout","bind","hideCallout","redrawCallout","animateMarkerToCoordinate","marker","setNativeProps","_runCommand","duration","findNodeHandle","name","args","Platform","OS","NativeModules","UIManager","dispatchViewManagerCommand","_getHandle","getUIManagerCommand","getMapManagerCommand","Image","resolveAssetSource","uri","AIRMapMarker","getAirComponent","ref","styles","style","event","Component","StyleSheet","create","position","backgroundColor","Animated","createAnimatedComponent","componentType","providers","google","ios","android"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  ColorPropType,\n  StyleSheet,\n  Platform,\n  NativeModules,\n  Animated,\n  Image,\n  findNodeHandle,\n  ViewPropTypes,\n  View,\n} from 'react-native';\n\nimport decorateMapComponent, {\n  SUPPORTED,\n  USES_DEFAULT_IMPLEMENTATION,\n} from './decorateMapComponent';\n\nconst viewConfig = {\n  uiViewClassName: 'AIR<provider>MapMarker',\n  validAttributes: {\n    coordinate: true,\n  },\n};\n\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\nconst propTypes = {\n  ...viewPropTypes,\n\n  // TODO(lmr): get rid of these?\n  identifier: PropTypes.string,\n  reuseIdentifier: PropTypes.string,\n\n  /**\n   * The title of the marker. This is only used if the <Marker /> component has no children that\n   * are a `<Callout />`, in which case the default callout behavior will be used, which\n   * will show both the `title` and the `description`, if provided.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The description of the marker. This is only used if the <Marker /> component has no children\n   * that are a `<Callout />`, in which case the default callout behavior will be used,\n   * which will show both the `title` and the `description`, if provided.\n   */\n  description: PropTypes.string,\n\n  /**\n   * Test ID for end to end test automation\n   */\n  testID: PropTypes.string,\n\n  /**\n   * A custom image to be used as the marker's icon. Only local image resources are allowed to be\n   * used.\n   */\n  image: PropTypes.any,\n\n  /**\n   * Marker icon to render (equivalent to `icon` property of GMSMarker Class).\n   * Using this property has an advantage over `image` in term of performance, battery usage...\n   * because it doesn't trigger tracksViewChanges.\n   * (tracksViewChanges is set to YES by default if iconView is not nil).\n   */\n  icon: PropTypes.any,\n\n  /**\n   * Opacity level of view/image based markers\n   */\n  opacity: PropTypes.number,\n\n  /**\n   * If no custom marker view or custom image is provided, the platform default pin will be used,\n   * which can be customized by this color. Ignored if a custom marker is being used.\n   */\n  pinColor: ColorPropType,\n\n  /**\n   * The coordinate for the marker.\n   */\n  coordinate: PropTypes.shape({\n    /**\n     * Coordinates for the anchor point of the marker.\n     */\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired,\n  }).isRequired,\n\n  /**\n   * The offset (in points) at which to display the view.\n   *\n   * By default, the center point of an annotation view is placed at the coordinate point of the\n   * associated annotation. You can use this property to reposition the annotation view as\n   * needed. This x and y offset values are measured in points. Positive offset values move the\n   * annotation view down and to the right, while negative values move it up and to the left.\n   *\n   * For android, see the `anchor` prop.\n   *\n   * @platform ios\n   */\n  centerOffset: PropTypes.shape({\n    /**\n     * Offset from the anchor point\n     */\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * The offset (in points) at which to place the callout bubble.\n   *\n   * This property determines the additional distance by which to move the callout bubble. When\n   * this property is set to (0, 0), the anchor point of the callout bubble is placed on the\n   * top-center point of the marker view’s frame. Specifying positive offset values moves the\n   * callout bubble down and to the right, while specifying negative values moves it up and to\n   * the left.\n   *\n   * For android, see the `calloutAnchor` prop.\n   *\n   * @platform ios\n   */\n  calloutOffset: PropTypes.shape({\n    /**\n     * Offset to the callout\n     */\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * Sets the anchor point for the marker.\n   *\n   * The anchor specifies the point in the icon image that is anchored to the marker's position\n   * on the Earth's surface.\n   *\n   * The anchor point is specified in the continuous space [0.0, 1.0] x [0.0, 1.0], where (0, 0)\n   * is the top-left corner of the image, and (1, 1) is the bottom-right corner. The anchoring\n   * point in a W x H image is the nearest discrete grid point in a (W + 1) x (H + 1) grid,\n   * obtained by scaling the then rounding. For example, in a 4 x 2 image, the anchor point\n   * (0.7, 0.6) resolves to the grid point at (3, 1).\n   *\n   * For ios, see the `centerOffset` prop.\n   *\n   * @platform android\n   */\n  anchor: PropTypes.shape({\n    /**\n     * Offset to the callout\n     */\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * Specifies the point in the marker image at which to anchor the callout when it is displayed.\n   * This is specified in the same coordinate system as the anchor. See the `andor` prop for more\n   * details.\n   *\n   * The default is the top middle of the image.\n   *\n   * For ios, see the `calloutOffset` prop.\n   *\n   * @platform android\n   */\n  calloutAnchor: PropTypes.shape({\n    /**\n     * Offset to the callout\n     */\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n\n  /**\n   * Sets whether this marker should be flat against the map true or a billboard facing the\n   * camera false.\n   *\n   * @platform android\n   */\n  flat: PropTypes.bool,\n\n  draggable: PropTypes.bool,\n\n  /**\n   * Sets whether this marker should track view changes true.\n   */\n\n  tracksViewChanges: PropTypes.bool,\n\n  /**\n   * Sets whether this marker should track view changes in info window true.\n   *\n   * @platform ios\n   */\n\n  tracksInfoWindowChanges: PropTypes.bool,\n\n  /**\n   * Stops Marker onPress events from propagating to and triggering MapView onPress events.\n   *\n   * @platform ios\n   */\n\n  stopPropagation: PropTypes.bool,\n\n  /**\n   * Callback that is called when the user presses on the marker\n   */\n  onPress: PropTypes.func,\n\n  /**\n   * Callback that is called when the user selects the marker, before the callout is shown.\n   *\n   * @platform ios\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Callback that is called when the marker is deselected, before the callout is hidden.\n   *\n   * @platform ios\n   */\n  onDeselect: PropTypes.func,\n\n  /**\n   * Callback that is called when the user taps the callout view.\n   */\n  onCalloutPress: PropTypes.func,\n\n  /**\n   * Callback that is called when the user initiates a drag on this marker (if it is draggable)\n   */\n  onDragStart: PropTypes.func,\n\n  /**\n   * Callback called continuously as the marker is dragged\n   */\n  onDrag: PropTypes.func,\n\n  /**\n   * Callback that is called when a drag on this marker finishes. This is usually the point you\n   * will want to setState on the marker's coordinate again\n   */\n  onDragEnd: PropTypes.func,\n};\n\nconst defaultProps = {\n  stopPropagation: false,\n};\n\nclass MapMarker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showCallout = this.showCallout.bind(this);\n    this.hideCallout = this.hideCallout.bind(this);\n    this.redrawCallout = this.redrawCallout.bind(this);\n    this.animateMarkerToCoordinate = this.animateMarkerToCoordinate.bind(this);\n  }\n\n  setNativeProps(props) {\n    this.marker.setNativeProps(props);\n  }\n\n  showCallout() {\n    this._runCommand('showCallout', []);\n  }\n\n  hideCallout() {\n    this._runCommand('hideCallout', []);\n  }\n\n  redrawCallout() {\n    this._runCommand('redrawCallout', []);\n  }\n\n  animateMarkerToCoordinate(coordinate, duration) {\n    this._runCommand('animateMarkerToCoordinate', [\n      coordinate,\n      duration || 500,\n    ]);\n  }\n\n  redraw() {\n    this._runCommand('redraw', []);\n  }\n\n  _getHandle() {\n    return findNodeHandle(this.marker);\n  }\n\n  _runCommand(name, args) {\n    switch (Platform.OS) {\n      case 'android':\n        NativeModules.UIManager.dispatchViewManagerCommand(\n          this._getHandle(),\n          this.getUIManagerCommand(name),\n          args\n        );\n        break;\n\n      case 'ios':\n        this.getMapManagerCommand(name)(this._getHandle(), ...args);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    let image;\n    if (this.props.image) {\n      image = Image.resolveAssetSource(this.props.image) || {};\n      image = image.uri || this.props.image;\n    }\n\n    let icon;\n    if (this.props.icon) {\n      icon = Image.resolveAssetSource(this.props.icon) || {};\n      icon = icon.uri;\n    }\n\n    const AIRMapMarker = this.getAirComponent();\n\n    return (\n      <AIRMapMarker\n        ref={ref => {\n          this.marker = ref;\n        }}\n        {...this.props}\n        image={image}\n        icon={icon}\n        style={[styles.marker, this.props.style]}\n        onPress={event => {\n          if (this.props.stopPropagation) {\n            event.stopPropagation();\n          }\n          if (this.props.onPress) {\n            this.props.onPress(event);\n          }\n        }}\n      />\n    );\n  }\n}\n\nMapMarker.propTypes = propTypes;\nMapMarker.defaultProps = defaultProps;\nMapMarker.viewConfig = viewConfig;\n\nconst styles = StyleSheet.create({\n  marker: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n});\n\nMapMarker.Animated = Animated.createAnimatedComponent(MapMarker);\n\nexport default decorateMapComponent(MapMarker, {\n  componentType: 'Marker',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}