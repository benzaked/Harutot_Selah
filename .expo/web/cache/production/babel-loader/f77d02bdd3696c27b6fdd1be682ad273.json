{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _jsxFileName=\"/Users/janic/Developer/react-native-safe-area-context/src/index.tsx\";import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{EdgeInsets}from\"./SafeArea.types\";import NativeSafeAreaView from\"./NativeSafeAreaView\";export var SafeAreaContext=React.createContext(null);export function SafeAreaProvider(_ref){var children=_ref.children;var parentInsets=useParentSafeArea();var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),insets=_React$useState2[0],setInsets=_React$useState2[1];var onInsetsChange=React.useCallback(function(event){setInsets(event.nativeEvent.insets);},[]);if(parentInsets){return React.createElement(View,{style:styles.fill,__source:{fileName:_jsxFileName,lineNumber:22}},children);}else{return React.createElement(NativeSafeAreaView,{style:styles.fill,onInsetsChange:onInsetsChange,__source:{fileName:_jsxFileName,lineNumber:25}},insets!==null?React.createElement(SafeAreaContext.Provider,{value:insets,__source:{fileName:_jsxFileName,lineNumber:27}},children):null);}}var styles=StyleSheet.create({fill:{flex:1}});export var SafeAreaConsumer=SafeAreaContext.Consumer;function useParentSafeArea(){return React.useContext(SafeAreaContext);}export function useSafeArea(){var safeArea=React.useContext(SafeAreaContext);if(safeArea==null){throw new Error('No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.');}return safeArea;}","map":{"version":3,"sources":["index.tsx"],"names":["SafeAreaContext","React","children","parentInsets","useParentSafeArea","insets","setInsets","onInsetsChange","event","styles","StyleSheet","fill","flex","SafeAreaConsumer","safeArea"],"mappings":"wJAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHAEA,OAAA,UAAA,wBACA,MAAA,CAAA,kBAAA,4BAEA,MAAO,IAAMA,CAAAA,eAAe,CAAGC,KAAK,CAALA,aAAAA,CAAxB,IAAwBA,CAAxB,CAMP,MAAO,SAAA,CAAA,gBAAA,CAAA,IAAA,CAA2D,CAA/BC,GAAAA,CAAAA,QAA+B,CAAA,IAAA,CAA/BA,QAAAA,CACjC,GAAIC,CAAAA,YAAY,CAAGC,iBAAnB,EAAA,CADgE,GAAA,CAAA,eAAA,CAEpCH,KAAK,CAALA,QAAAA,CAFoC,IAEpCA,CAFoC,CAAA,gBAAA,CAAA,cAAA,CAAA,eAAA,CAAA,CAAA,CAAA,CAEzDI,MAFyD,CAAA,gBAAA,CAAA,CAAA,CAAA,CAEjDC,SAFiD,CAAA,gBAAA,CAAA,CAAA,CAAA,CAGhE,GAAMC,CAAAA,cAAc,CAAGN,KAAK,CAALA,WAAAA,CAAkB,SAAA,KAAA,CAA8B,CACrEK,SAAS,CAACE,KAAK,CAALA,WAAAA,CAAVF,MAAS,CAATA,CADqBL,CAAAA,CAAvB,EAAuBA,CAAvB,CAMA,GAAA,YAAA,CAAkB,CAChB,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAEQ,MAAM,CAAnB,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAAP,QAAO,CAAP,CADF,CAAA,IAEO,CACL,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,kBAAA,CAAA,CAAoB,KAAK,CAAEA,MAAM,CAAjC,IAAA,CAAwC,cAAc,CAAtD,cAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CACGJ,MAAM,GAANA,IAAAA,CACC,KAAA,CAAA,aAAA,CAAC,eAAD,CAAA,QAAA,CAAA,CAA0B,KAAK,CAA/B,MAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CADDA,QACC,CADDA,CAFL,IACE,CADF,CAUH,CAED,IAAMI,CAAAA,MAAM,CAAGC,UAAU,CAAVA,MAAAA,CAAkB,CAC/BC,IAAI,CAAE,CAAEC,IAAI,CADd,CACQ,CADyB,CAAlBF,CAAf,CAIA,MAAO,IAAMG,CAAAA,gBAAgB,CAAGb,eAAe,CAAxC,QAAA,CAEP,QAAA,CAAA,iBAAA,EAAwE,CACtE,MAAOC,CAAAA,KAAK,CAALA,UAAAA,CAAP,eAAOA,CAAP,CAGF,OAAO,SAAA,CAAA,WAAA,EAAmC,CACxC,GAAMa,CAAAA,QAAQ,CAAGb,KAAK,CAALA,UAAAA,CAAjB,eAAiBA,CAAjB,CACA,GAAIa,QAAQ,EAAZ,IAAA,CAAsB,CACpB,KAAM,IAAA,CAAA,KAAA,CAAN,wGAAM,CAAN,CAIF,OAAA,CAAA,QAAA,CACD","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { EdgeInsets, InsetChangedEvent } from './SafeArea.types';\nimport NativeSafeAreaView from './NativeSafeAreaView';\n\nexport const SafeAreaContext = React.createContext<EdgeInsets | null>(null);\n\nexport interface SafeAreaViewProps {\n  children?: React.ReactNode;\n}\n\nexport function SafeAreaProvider({ children }: SafeAreaViewProps) {\n  let parentInsets = useParentSafeArea();\n  const [insets, setInsets] = React.useState<EdgeInsets | null>(null);\n  const onInsetsChange = React.useCallback((event: InsetChangedEvent) => {\n    setInsets(event.nativeEvent.insets);\n  }, []);\n\n  // If a provider is nested inside of another provider then we can just use\n  // the parent insets, without rendering another native safe area view\n  if (parentInsets) {\n    return <View style={styles.fill}>{children}</View>;\n  } else {\n    return (\n      <NativeSafeAreaView style={styles.fill} onInsetsChange={onInsetsChange}>\n        {insets !== null ? (\n          <SafeAreaContext.Provider value={insets}>\n            {children}\n          </SafeAreaContext.Provider>\n        ) : null}\n      </NativeSafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  fill: { flex: 1 },\n});\n\nexport const SafeAreaConsumer = SafeAreaContext.Consumer;\n\nfunction useParentSafeArea(): React.ContextType<typeof SafeAreaContext> {\n  return React.useContext(SafeAreaContext);\n}\n\nexport function useSafeArea(): EdgeInsets {\n  const safeArea = React.useContext(SafeAreaContext);\n  if (safeArea == null) {\n    throw new Error(\n      'No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.',\n    );\n  }\n  return safeArea;\n}\n\nexport type EdgeInsets = EdgeInsets;\n"]},"metadata":{},"sourceType":"module"}