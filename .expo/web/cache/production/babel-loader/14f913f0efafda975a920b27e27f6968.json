{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import PropTypes from'prop-types';import React from'react';import ViewPropTypes from\"react-native-web/dist/exports/ViewPropTypes\";import View from\"react-native-web/dist/exports/View\";import decorateMapComponent,{USES_DEFAULT_IMPLEMENTATION,SUPPORTED}from\"./decorateMapComponent\";var viewPropTypes=ViewPropTypes||View.propTypes;var propTypes=_objectSpread({},viewPropTypes,{urlTemplate:PropTypes.string.isRequired,zIndex:PropTypes.number,maximumZ:PropTypes.number,minimumZ:PropTypes.number,shouldReplaceMapContent:PropTypes.bool,tileSize:PropTypes.number,opacity:PropTypes.number});var MapWMSTile=function(_React$Component){_inherits(MapWMSTile,_React$Component);function MapWMSTile(){_classCallCheck(this,MapWMSTile);return _possibleConstructorReturn(this,_getPrototypeOf(MapWMSTile).apply(this,arguments));}_createClass(MapWMSTile,[{key:\"render\",value:function render(){var AIRMapWMSTile=this.getAirComponent();return React.createElement(AIRMapWMSTile,this.props);}}]);return MapWMSTile;}(React.Component);MapWMSTile.propTypes=propTypes;export default decorateMapComponent(MapWMSTile,{componentType:'WMSTile',providers:{google:{ios:SUPPORTED,android:USES_DEFAULT_IMPLEMENTATION}}});","map":{"version":3,"sources":["C:/final project/react native/finalProject-master/node_modules/react-native-maps/lib/components/MapWMSTile.js"],"names":["PropTypes","React","decorateMapComponent","USES_DEFAULT_IMPLEMENTATION","SUPPORTED","viewPropTypes","ViewPropTypes","View","propTypes","urlTemplate","string","isRequired","zIndex","number","maximumZ","minimumZ","shouldReplaceMapContent","bool","tileSize","opacity","MapWMSTile","AIRMapWMSTile","getAirComponent","props","Component","componentType","providers","google","ios","android"],"mappings":"krCAAA,MAAOA,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,4HAIA,MAAOC,CAAAA,oBAAP,EACEC,2BADF,CAEEC,SAFF,8BAMA,GAAMC,CAAAA,aAAa,CAAGC,aAAa,EAAIC,IAAI,CAACC,SAA5C,CAEA,GAAMA,CAAAA,SAAS,kBACVH,aADU,EAQbI,WAAW,CAAET,SAAS,CAACU,MAAV,CAAiBC,UARjB,CAiBbC,MAAM,CAAEZ,SAAS,CAACa,MAjBL,CAsBbC,QAAQ,CAAEd,SAAS,CAACa,MAtBP,CA4BbE,QAAQ,CAAEf,SAAS,CAACa,MA5BP,CAmCbG,uBAAuB,CAAEhB,SAAS,CAACiB,IAnCtB,CAwCbC,QAAQ,CAAElB,SAAS,CAACa,MAxCP,CA8CbM,OAAO,CAAEnB,SAAS,CAACa,MA9CN,EAAf,C,GAiDMO,CAAAA,U,mRACK,CACP,GAAMC,CAAAA,aAAa,CAAG,KAAKC,eAAL,EAAtB,CACA,MAAO,qBAAC,aAAD,CAAmB,KAAKC,KAAxB,CAAP,CACD,C,wBAJsBtB,KAAK,CAACuB,S,EAO/BJ,UAAU,CAACZ,SAAX,CAAuBA,SAAvB,CACA,cAAeN,CAAAA,oBAAoB,CAACkB,UAAD,CAAa,CAC9CK,aAAa,CAAE,SAD+B,CAE9CC,SAAS,CAAE,CACTC,MAAM,CAAE,CACNC,GAAG,CAAExB,SADC,CAENyB,OAAO,CAAE1B,2BAFH,CADC,CAFmC,CAAb,CAAnC","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { ViewPropTypes, View } from 'react-native';\n\nimport decorateMapComponent, {\n  USES_DEFAULT_IMPLEMENTATION,\n  SUPPORTED,\n} from './decorateMapComponent';\n\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\nconst propTypes = {\n  ...viewPropTypes,\n\n  /**\n   * The url template of the tile server. The patterns {minX} {maxX} {minY} {maxY} {width} {height}\n   * will be replaced at runtime according to EPSG:900913 specification bounding box.\n   * For example, https://demo.geo-solutions.it/geoserver/tiger/wms?service=WMS&version=1.1.0&request=GetMap&layers=tiger:poi&styles=&bbox={minX},{minY},{maxX},{maxY}&width={width}&height={height}&srs=EPSG:900913&format=image/png&transparent=true&format_options=dpi:213\n   */\n  urlTemplate: PropTypes.string.isRequired,\n\n  /**\n   * The order in which this tile overlay is drawn with respect to other overlays. An overlay\n   * with a larger z-index is drawn over overlays with smaller z-indices. The order of overlays\n   * with the same z-index is arbitrary. The default zIndex is -1.\n   *\n   * @platform android\n   */\n  zIndex: PropTypes.number,\n  /**\n   * The maximum zoom level for this tile overlay.\n   *\n   */\n  maximumZ: PropTypes.number,\n\n  /**\n   * The minimum zoom level for this tile overlay.\n   *\n   */\n  minimumZ: PropTypes.number,\n\n  /**\n   * Corresponds to MKTileOverlay canReplaceMapContent.\n   *\n   * @platform ios\n   */\n  shouldReplaceMapContent: PropTypes.bool,\n  /**\n   * tileSize.\n   *\n   */\n  tileSize: PropTypes.number,\n\n  /**\n   * opacity. between 0 - 1\n   *\n   */\n  opacity: PropTypes.number,\n};\n\nclass MapWMSTile extends React.Component {\n  render() {\n    const AIRMapWMSTile = this.getAirComponent();\n    return <AIRMapWMSTile {...this.props} />;\n  }\n}\n\nMapWMSTile.propTypes = propTypes;\nexport default decorateMapComponent(MapWMSTile, {\n  componentType: 'WMSTile',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}