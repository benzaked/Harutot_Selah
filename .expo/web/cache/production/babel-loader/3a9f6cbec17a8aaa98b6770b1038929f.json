{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _createSuper(Derived){function isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}return function(){var Super=_getPrototypeOf(Derived),result;if(isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}import React from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import{MapView,Permissions}from'expo';import{Marker}from'react-native-maps';var _Dimensions$get=Dimensions.get('screen'),width=_Dimensions$get.width,height=_Dimensions$get.height;var Map=function(_React$Component){_inherits(Map,_React$Component);var _super=_createSuper(Map);function Map(){var _this;_classCallCheck(this,Map);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={latitude:null,longitude:null};_this.mergeCoords=function(){var _this$state=_this.state,latitude=_this$state.latitude,longitude=_this$state.longitude,desLatitude=_this$state.desLatitude,desLongitude=_this$state.desLongitude;var hasStartAndEnd=latitude!==null&&desLatitude!==null;if(hasStartAndEnd){var concatStart=latitude+\",\"+longitude;var concatEnd=desLatitude+\",\"+desLongitude;_this.getDirections(concatStart,concatEnd);}};_this.onMarkerPress=function(location){return function(){var _location$coords=location.coords,latitude=_location$coords.latitude,longitude=_location$coords.longitude;_this.setState({destination:location,desLatitude:latitude,desLongitude:longitude},_this.mergeCoords);};};return _this;}_createClass(Map,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var _ref,status,response;return _regeneratorRuntime.async(function componentDidMount$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.LOCATION));case 2:_ref=_context.sent;status=_ref.status;if(!(status!=='granted')){_context.next=8;break;}_context.next=7;return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));case 7:response=_context.sent;case 8:navigator.geolocation.getCurrentPosition(function(_ref2){var _ref2$coords=_ref2.coords,latitude=_ref2$coords.latitude,longitude=_ref2$coords.longitude;return _this2.setState({latitude:latitude,longitude:longitude},_this2.mergeCoords);},function(error){return console.log('Error:',error);});this.setState({desLatitude:sampleLocation.coords.latitude,desLongitude:sampleLocation.coords.longitude},this.mergeCoords);case 10:case\"end\":return _context.stop();}}},null,this,null,Promise);}},{key:\"getDirections\",value:function getDirections(startLoc,desLoc){var resp,respJson,response,distanceTime,distance,time,points,coords;return _regeneratorRuntime.async(function getDirections$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(fetch(\"https://maps.googleapis.com/maps/api/directions/json?origin=\"+startLoc+\"&destination=\"+desLoc));case 3:resp=_context2.sent;_context2.next=6;return _regeneratorRuntime.awrap(resp.json());case 6:respJson=_context2.sent;response=respJson.routes[0];distanceTime=response.legs[0];distance=distanceTime.distance.text;time=distanceTime.duration.text;points=Polyline.decode(respJson.routes[0].overview_polyline.points);coords=points.map(function(point){return{latitude:point[0],longitude:point[1]};});this.setState({coords:coords,distance:distance,time:time});_context2.next=19;break;case 16:_context2.prev=16;_context2.t0=_context2[\"catch\"](0);console.log('Error: ',_context2.t0);case 19:case\"end\":return _context2.stop();}}},null,this,[[0,16]],Promise);}},{key:\"render\",value:function render(){var _this$state2=this.state,time=_this$state2.time,coords=_this$state2.coords,distance=_this$state2.distance,latitude=_this$state2.latitude,longitude=_this$state2.longitude,destination=_this$state2.destination;if(latitude){return React.createElement(MapView,{showsUserLocation:true,style:{flex:1},initialRegion:{latitude:latitude,longitude:longitude,latitudeDelta:0.0922,longitudeDelta:0.0421}});}return React.createElement(View,{style:{flex:1,justifyContent:'center',alignItems:'center'}},React.createElement(Text,null,\"We need your permission!\"));}}]);return Map;}(React.Component);export{Map as default};var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff',alignItems:'center',justifyContent:'center'}});","map":{"version":3,"sources":["C:/final project/react native/finalProject-master/components/Map.js"],"names":["React","MapView","Permissions","Marker","Dimensions","get","width","height","Map","state","latitude","longitude","mergeCoords","desLatitude","desLongitude","hasStartAndEnd","concatStart","concatEnd","getDirections","onMarkerPress","location","coords","setState","destination","getAsync","LOCATION","status","askAsync","response","navigator","geolocation","getCurrentPosition","error","console","log","sampleLocation","startLoc","desLoc","fetch","resp","json","respJson","routes","distanceTime","legs","distance","text","time","duration","points","Polyline","decode","overview_polyline","map","point","flex","latitudeDelta","longitudeDelta","justifyContent","alignItems","Component","styles","StyleSheet","create","container","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Dimensions, StyleSheet, Text, View, Image } from 'react-native';\r\n\r\nimport { MapView, Permissions } from 'expo'\r\n\r\nimport { Marker } from 'react-native-maps'\r\n\r\nconst { width, height } = Dimensions.get('screen')\r\n\r\nexport default class Map extends React.Component {\r\n  state = {\r\n    latitude: null,\r\n    longitude: null,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { status } = await Permissions.getAsync(Permissions.LOCATION)\r\n\r\n    if (status !== 'granted') {\r\n      const response = await Permissions.askAsync(Permissions.LOCATION)\r\n    }\r\n    navigator.geolocation.getCurrentPosition(\r\n      ({ coords: { latitude, longitude } }) => this.setState({ latitude, longitude }, this.mergeCoords),\r\n      (error) => console.log('Error:', error)\r\n    )\r\n\r\n\r\n    this.setState({\r\n      desLatitude: sampleLocation.coords.latitude,\r\n      desLongitude: sampleLocation.coords.longitude\r\n    }, this.mergeCoords)\r\n  }\r\n\r\n  mergeCoords = () => {\r\n    const {\r\n      latitude,\r\n      longitude,\r\n      desLatitude,\r\n      desLongitude\r\n    } = this.state\r\n\r\n    const hasStartAndEnd = latitude !== null && desLatitude !== null\r\n\r\n    if (hasStartAndEnd) {\r\n      const concatStart = `${latitude},${longitude}`\r\n      const concatEnd = `${desLatitude},${desLongitude}`\r\n      this.getDirections(concatStart, concatEnd)\r\n    }\r\n  }\r\n\r\n  async getDirections(startLoc, desLoc) {\r\n    try {\r\n      const resp = await fetch(`https://maps.googleapis.com/maps/api/directions/json?origin=${startLoc}&destination=${desLoc}`)\r\n      const respJson = await resp.json();\r\n      const response = respJson.routes[0]\r\n      const distanceTime = response.legs[0]\r\n      const distance = distanceTime.distance.text\r\n      const time = distanceTime.duration.text\r\n      const points = Polyline.decode(respJson.routes[0].overview_polyline.points);\r\n      const coords = points.map(point => {\r\n        return {\r\n          latitude: point[0],\r\n          longitude: point[1]\r\n        }\r\n      })\r\n      this.setState({ coords, distance, time })\r\n    } catch(error) {\r\n      console.log('Error: ', error)\r\n    }\r\n  }\r\n\r\n  onMarkerPress = location => () => {\r\n    const { coords: { latitude, longitude } } = location\r\n    this.setState({\r\n      destination: location,\r\n      desLatitude: latitude,\r\n      desLongitude: longitude\r\n    }, this.mergeCoords)\r\n  }\r\n\r\n  // renderMarkers = () => {\r\n  //   const { locations } = this.state\r\n  //   return (\r\n  //     <View>\r\n  //       {\r\n  //         locations.map((location, idx) => {\r\n  //           const {\r\n  //             coords: { latitude, longitude }\r\n  //           } = location\r\n  //           return (\r\n  //             <Marker\r\n  //               key={idx}\r\n  //               coordinate={{ latitude, longitude }}\r\n  //               onPress={this.onMarkerPress(location)}\r\n  //             />\r\n  //           )\r\n  //         })\r\n  //       }\r\n  //     </View>\r\n  //   )\r\n  // }\r\n\r\n  render() {\r\n    const {\r\n      time,\r\n      coords,\r\n      distance,\r\n      latitude,\r\n      longitude,\r\n      destination\r\n    } = this.state\r\n\r\n    if (latitude) {\r\n      return (\r\n        <MapView\r\n          showsUserLocation\r\n          style={{ flex: 1 }}\r\n          initialRegion={{\r\n            latitude,\r\n            longitude,\r\n            latitudeDelta: 0.0922,\r\n            longitudeDelta: 0.0421\r\n          }}\r\n        >\r\n        \r\n        \r\n      </MapView>\r\n      );\r\n    }\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text>We need your permission!</Text>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}