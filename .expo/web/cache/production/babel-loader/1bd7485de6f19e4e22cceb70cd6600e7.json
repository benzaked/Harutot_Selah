{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import React from'react';import hoistStatics from'hoist-non-react-statics';import withNavigation from\"./withNavigation\";export default function withNavigationFocus(Component){var ComponentWithNavigationFocus=function(_React$Component){_inherits(ComponentWithNavigationFocus,_React$Component);function ComponentWithNavigationFocus(props){var _this;_classCallCheck(this,ComponentWithNavigationFocus);_this=_possibleConstructorReturn(this,_getPrototypeOf(ComponentWithNavigationFocus).call(this,props));_this.subscriptions=[props.navigation.addListener('didFocus',function(){return _this.setState({isFocused:true});}),props.navigation.addListener('willBlur',function(){return _this.setState({isFocused:false});})];_this.state={isFocused:props.navigation?props.navigation.isFocused():false};return _this;}_createClass(ComponentWithNavigationFocus,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.subscriptions.forEach(function(sub){return sub.remove();});}},{key:\"render\",value:function render(){return React.createElement(Component,_extends({},this.props,{isFocused:this.state.isFocused,ref:this.props.onRef}));}}]);return ComponentWithNavigationFocus;}(React.Component);_defineProperty(ComponentWithNavigationFocus,\"displayName\",\"withNavigationFocus(\".concat(Component.displayName||Component.name,\")\"));return hoistStatics(withNavigation(ComponentWithNavigationFocus,{forwardRef:false}),Component);}","map":{"version":3,"sources":["withNavigationFocus.js"],"names":["React","Component","constructor","isFocused","props","sub","onRef","hoistStatics","withNavigation","forwardRef"],"mappings":"gyBAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,YAAA,KAAA,yBAAA,CACA,MAAA,CAAA,cAAA,wBAEA,cAAe,SAAA,CAAA,mBAAA,CAAA,SAAA,CAAwC,IACrD,CAAA,4BADqD,qFAKnDE,sCAAW,KAAXA,CAAmB,8DACjB,8FAAA,KAAA,GAEA,MAAA,aAAA,CAAqB,CACnB,KAAK,CAAL,UAAA,CAAA,WAAA,CAAA,UAAA,CAAyC,iBACvC,OAAA,QAAA,CAAc,CAAEC,SAAS,CAAE,IAAb,CAAd,CADuC,EAAzC,CADmB,CAInB,KAAK,CAAL,UAAA,CAAA,WAAA,CAAA,UAAA,CAAyC,iBACvC,OAAA,QAAA,CAAc,CAAEA,SAAS,CAAE,KAAb,CAAd,CADuC,EAAzC,CAJmB,CAArB,CASA,MAAA,KAAA,CAAa,CACXA,SAAS,CAAEC,KAAK,CAALA,UAAAA,CAAmBA,KAAK,CAALA,UAAAA,CAAnBA,SAAmBA,EAAnBA,CAAkD,KADlD,CAAb,CAZiB,aAelB,CApBkD,4GAsB5B,CACrB,KAAA,aAAA,CAAA,OAAA,CAA2BC,SAAAA,GAAG,QAAIA,CAAAA,GAAG,CAArC,MAAkCA,EAAJ,EAA9B,EACD,CAxBkD,uCA0B1C,CACP,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,SAAA,CAAA,QAAA,CAAA,EAAA,CACM,KADN,KAAA,CAAA,CAEE,SAAS,CAAE,KAAA,KAAA,CAFb,SAAA,CAGE,GAAG,CAAE,KAAA,KAAA,CAAWC,KAHlB,CAAA,CAAA,CADF,CAOD,CAlCkD,0CACVN,KAAK,CAAhD,SADqD,EAAA,eAAA,CAAA,4BAAA,CAAA,aAAA,CAAA,uBAAA,MAAA,CAEPC,SAAS,CAATA,WAAAA,EAC1CA,SAAS,CAHwC,IAAA,CAAA,GAAA,CAAA,CAAA,CAqCrD,MAAOM,CAAAA,YAAY,CACjBC,cAAc,CAAA,4BAAA,CAA+B,CAAEC,UAAU,CAAE,KAAd,CAA/B,CADG,CAAnB,SAAmB,CAAnB,CAID","sourcesContent":["import React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport withNavigation from './withNavigation';\n\nexport default function withNavigationFocus(Component) {\n  class ComponentWithNavigationFocus extends React.Component {\n    static displayName = `withNavigationFocus(${Component.displayName ||\n      Component.name})`;\n\n    constructor(props) {\n      super(props);\n\n      this.subscriptions = [\n        props.navigation.addListener('didFocus', () =>\n          this.setState({ isFocused: true })\n        ),\n        props.navigation.addListener('willBlur', () =>\n          this.setState({ isFocused: false })\n        ),\n      ];\n\n      this.state = {\n        isFocused: props.navigation ? props.navigation.isFocused() : false,\n      };\n    }\n\n    componentWillUnmount() {\n      this.subscriptions.forEach(sub => sub.remove());\n    }\n\n    render() {\n      return (\n        <Component\n          {...this.props}\n          isFocused={this.state.isFocused}\n          ref={this.props.onRef}\n        />\n      );\n    }\n  }\n\n  return hoistStatics(\n    withNavigation(ComponentWithNavigationFocus, { forwardRef: false }),\n    Component\n  );\n}\n"]},"metadata":{},"sourceType":"module"}